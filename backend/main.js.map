{"version":3,"sources":["./src/app/chat/chat.component.ts","./src/app/chat/chat.component.html","./src/app/visual-novel/visual-novel.component.ts","./src/app/visual-novel/visual-novel.component.html","./src/app/fe-bean-preview/fe-bean-preview.component.ts","./src/app/fe-bean-preview/fe-bean-preview.component.html","./src/environments/environment.ts","./src/app/icon-with-tooltip/icon-with-tooltip.component.ts","./src/app/icon-with-tooltip/icon-with-tooltip.component.html","./src/app/discord-mappings-add/discord-mappings-add.component.ts","./src/app/discord-mappings-add/discord-mappings-add.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/mafia/mafia.component.ts","./src/app/mafia/mafia.component.html","./src/app/app.module.ts","./src/app/fe3hau/fe3hau.component.ts","./src/app/fe3hau/fe3hau.component.html","./src/app/fe-bean-list/fe-bean-list.component.ts","./src/app/fe-bean-list/fe-bean-list.component.html","./src/app/lobby/lobby.component.ts","./src/app/lobby/lobby.component.html","./src/app/game/game.component.ts","./src/app/game/game.component.html","./src/app/bean-preview/bean-preview.component.ts","./src/app/bean-preview/bean-preview.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import {\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnInit,\n  QueryList,\n  SimpleChanges,\n  ViewChild,\n  ViewChildren\n} from '@angular/core';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {getMafiaURL} from \"../app.component\";\nimport {Subject} from \"rxjs\";\n\ninterface ChatData {\n  sender: string,\n  avatar: string,\n  message: string,\n  type: number;\n  phase: number;\n}\n\ninterface ChatMessageData {\n  code: string\n  image?: string\n  isEmote: boolean\n}\n\ninterface ChatMessageDataHolder {\n  sender: string;\n  avatar: string;\n  type: number;\n  phase: number;\n  data: ChatMessageData[];\n}\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.css']\n})\nexport class ChatComponent implements OnInit {\n  messages: ChatMessageDataHolder[];\n  emoteMap: Map<string, string>;\n  isRefreshingChat = false;\n  chatStartID = 0\n  chatPhase = 0\n  chatSubject: Subject<any>;\n  maxPhase: number = 0\n  @Input() phase: number\n  @Input() isDead: boolean;\n  @Input() username: string\n  @Input() userID: number\n  @Input() characterAvatar: string\n  @Input() characterName: string\n  @Input() canSend: boolean\n  @ViewChild('chatEntry') chatEntry : ElementRef;\n  @ViewChild('chatTableHolder') chatTableHolder : ElementRef;\n  @ViewChild('chatTable') chatTable : ElementRef;\n\n  constructor(private http: HttpClient) {\n  }\n\n  ngOnInit(): void {\n    this.emoteMap = new Map<string, string>();\n    this.emoteMap.set('crybichu', 'https://cdn.discordapp.com/emojis/622202821940609065.png?v=1');\n    this.emoteMap.set('honk', 'https://cdn.discordapp.com/emojis/633488458022780939.png?v=1');\n    this.emoteMap.set('salutetri', 'https://cdn.discordapp.com/emojis/603325799948484609.png?v=1');\n    this.emoteMap.set('potatolenz', 'https://cdn.discordapp.com/emojis/609861969352196101.png?v=1');\n    this.emoteMap.set('furbaby', 'https://cdn.discordapp.com/emojis/695258347124817941.png?v=1');\n    this.emoteMap.set('tpose', 'https://cdn.discordapp.com/emojis/624458657010024449.png?v=1');\n    this.emoteMap.set('woolbaby', 'https://cdn.discordapp.com/emojis/757515237824921760.png?v=1');\n    this.emoteMap.set('begone', 'https://cdn.discordapp.com/emojis/653691327715868682.png?v=1');\n    this.messages = [];\n    this.chatSubject = new Subject<any>();\n    this.chatSubject.subscribe(data => this.parseChatData(data));\n    this.refreshChat();\n    setInterval(() => {\n      this.refreshChat();\n    }, 2000)\n  }\n\n  convertMessage(chatData: ChatData): ChatMessageDataHolder {\n    let data = [];\n    let currentMessage = '';\n    let couldBeEmote = false;\n    chatData.message.split('').forEach(char => {\n      if(char === ':') {\n        if(couldBeEmote) {\n          let emote = this.convertToEmote(currentMessage);\n          if(!!emote) {\n            data.push({code: currentMessage, image: emote, isEmote: true});\n            currentMessage = '';\n            couldBeEmote = false;\n          } else {\n            data.push({code: ':' + currentMessage, isEmote: false});\n            currentMessage = ''\n          }\n        } else {\n          data.push({code: currentMessage, isEmote: false});\n          currentMessage = '';\n          couldBeEmote = true;\n        }\n      } else {\n        currentMessage = currentMessage + char;\n      }\n    });\n    if(couldBeEmote) {\n      data.push({code: ':' + currentMessage, isEmote: false});\n    } else {\n      data.push({code: currentMessage, isEmote: false});\n    }\n    return {\n      sender: chatData.sender,\n      avatar: chatData.avatar,\n      type: chatData.type,\n      phase: chatData.phase,\n      data\n    };\n  }\n\n  convertToEmote(emoteName: string): (string | undefined) {\n    return this.emoteMap.get(emoteName);\n  }\n\n  getMessageType(): number {\n    if(this.isDead) {\n      return -1;\n    } else {\n      return 0;\n    }\n  }\n\n  ChatOnKey(event: KeyboardEvent) {\n    if(event.code === 'Enter' && this.canSend) {\n      const url: string = getMafiaURL() + \"/chat/send\"\n      /*const body = new URLSearchParams();\n      body.set(\"startID\", String(this.chatStartID))\n      body.set(\"phase\", String(this.phase))\n      body.set(\"avatar\", this.characterAvatar);\n      body.set(\"user_name\", this.username);\n      body.set(\"character_name\", this.characterName);\n      body.set(\"message\", this.chatEntry.nativeElement.value);*/\n      var phaseToUse = this.chatPhase\n      var startID = this.chatStartID\n\n      const body = {startID: startID, phase: phaseToUse, avatar: this.characterAvatar, user_name: this.username, character_name: this.characterName, message: this.chatEntry.nativeElement.value}\n      this.chatEntry.nativeElement.value = '';\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type':  'application/json',\n        })\n      };\n      this.http.post(url, body, httpOptions).subscribe((data: {}) => {\n        console.log(\"Post Data: \" + data[\"status\"] + \" \" + data[\"query\"]);\n        this.chatSubject.next(data);\n      });\n    }\n  }\n\n  refreshChat() : void {\n    const startPhase = this.phase;\n    if(startPhase == this.phase && !this.isRefreshingChat) {\n      this.isRefreshingChat = true;\n      /*const url: string = getMafiaURL() + \"&action=read&phase=\" + startPhase + \"&messageType=\" + this.getMessageType() +\n        \"&startID=\" + this.chatStartID + \"&isDead=\" + (this.isDead ? 1 : 0) + \"&name=\" + this.username;*/\n      if (startPhase > this.maxPhase) {\n        this.chatStartID = 0\n        this.chatPhase = startPhase\n        this.maxPhase = this.chatPhase\n      }\n      const url: string = getMafiaURL() + \"/chat/read/\" + this.username + \"/\" + startPhase + \"/\" + this.chatStartID\n      this.http.get(url).subscribe(data => {\n        this.chatSubject.next(data);\n        this.isRefreshingChat = false;\n      });\n    }\n  }\n\n  parseChatData(data: any) {\n      if (data[\"status\"] == 0) {\n        const oldStartID = this.chatStartID;\n        data[\"chat\"].forEach(cdata => {\n          let mid: number = +cdata[\"id\"];\n          if(mid + 1 > this.chatStartID) {\n            this.chatStartID = mid + 1;\n          }\n        })\n        console.log(data)\n        let newChats : ChatMessageDataHolder[] = data[\"chat\"].filter(cdata => cdata[\"id\"] >= oldStartID).map(cdata => {\n          const c: ChatData = {sender: cdata[\"name\"], avatar: cdata[\"avatar\"], message: cdata[\"message\"], type: cdata[\"messageType\"], phase: cdata[\"phase\"]};\n          const m: ChatMessageDataHolder = this.convertMessage(c);\n          return m;\n        }).reverse();\n        console.log(newChats)\n        this.messages = this.messages.filter(message => message.phase == this.phase);\n        if(newChats.length > 0) {\n          this.messages = newChats.concat(this.messages);\n        }\n        console.log(this.messages)\n        console.log(this.phase)\n      }\n  }\n}\n","<div class=\"chat-holder-holder\">\n  <div class=\"chat-holder\">\n    <div class=\"chat-table-holder\" #chatTableHolder>\n      <table class=\"chat-table\" #chatTable>\n        <tr *ngFor=\"let message of this.messages\">\n          <td class=\"sender-avatar-holder\"><img [src]=\"message.avatar\" class=\"sender-avatar\"></td>\n          <td>\n            <div [class.dead]=\"message.type === 0\" class=\"messageContent\">\n              <div class=\"sender\">{{message.sender}}</div>\n              <div class=\"messageText\">\n                <span *ngFor=\"let messageData of message.data\">\n                  <span *ngIf=\"messageData.isEmote\">\n                    <img class=\"emote\" [src]=\"messageData.image\">\n                  </span>\n                  <span *ngIf=\"!messageData.isEmote\">{{messageData.code}}</span>\n                </span>\n              </div>\n            </div>\n          </td>\n        </tr>\n      </table>\n    </div>\n    <input matInput id=\"chatEntry\" class=\"chat-input\" type=\"text\" (keyup)=\"ChatOnKey($event)\" #chatEntry>\n  </div>\n</div>\n","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\n\n@Component({\n  selector: 'app-visual-novel',\n  templateUrl: './visual-novel.component.html',\n  styleUrls: ['./visual-novel.component.css']\n})\nexport class VisualNovelComponent implements OnInit {\n\n  constructor() { }\n\n  targetText: string;\n  currentLength: number;\n  breaks : number[];\n  currLineIndex : number;\n  @ViewChild('widthChecker') widthChecker: ElementRef;\n\n  ngOnInit(): void {\n    this.breaks = [0, 0, 0, 0, 0]\n    this.currLineIndex = 0;\n    this.targetText = \"Do you believe in magic? Oh never believe its not so for if the magic you believe in can not be more than cheese than who am I to say that cheese is not but a reality.\"\n    this.currentLength = 0;\n    setInterval(() => {\n      this.breaks[this.currLineIndex + 1] += 1;\n      if(this.widthChecker.nativeElement.offsetWidth > 400) {\n        this.currLineIndex += 1;\n        this.breaks[this.currLineIndex + 1] = this.breaks[this.currLineIndex];\n      }\n    }, 50)\n  }\n\n}\n","<div class=\"dialogue\" *ngFor=\"let i of [0, 1, 2, 3]\">\n  {{this.targetText.slice(this.breaks[i], this.breaks[i + 1])}}\n</div>\n<div class=\"tinyHideBox\">\n  <div #widthChecker class=\"widthChecker\">\n    {{this.targetText.slice(this.breaks[this.currLineIndex], this.breaks[this.currLineIndex + 1])}}\n  </div>\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Component({\n  selector: 'app-fe-bean-preview',\n  templateUrl: './fe-bean-preview.component.html',\n  styleUrls: ['./fe-bean-preview.component.css']\n})\nexport class FeBeanPreviewComponent implements OnInit {\n  colorID : string;\n  hatID : string;\n  showPrimary = true;\n  @Input() character : string;\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n    const url: string = \"http://jaketheduck.com/games/phpapi/gamedata.php?type=chardata&character=\" + this.character;\n    this.http.get(url).subscribe((data: {}) => {\n      if (data[\"status\"] == 0) {\n        console.log(\"COLORID: \" + data[\"colorID\"]);\n        this.colorID = data[\"colorID\"];\n        this.hatID = data[\"hatID\"];\n      }\n    });\n  }\n\n}\n","<div>\n  <app-bean-preview [colorID]=\"this.colorID\" [hatID]=\"this.hatID\" scale=\"0.5\"></app-bean-preview>\n</div>\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-icon-with-tooltip',\n  templateUrl: './icon-with-tooltip.component.html',\n  styleUrls: ['./icon-with-tooltip.component.css']\n})\nexport class IconWithTooltipComponent implements OnInit {\n  @Input() name: string;\n  @Input() icon: string;\n  @Input() description: string;\n  shouldShow: boolean = false;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<span (mouseover)=\"this.shouldShow = true;\"\n      (mouseout)=\"this.shouldShow = false;\"\n      (mouseleave)=\"this.shouldShow = false;\">\n  <img class=\"selectRoleIcon\" [src]=\"this.icon\">\n  <div class=\"fancyTooltipHolder\">\n    <div *ngIf=\"this.shouldShow\" class=\"fancyTooltip\">\n      <h2>\n        <img class=\"selectRoleIcon\" [src]=\"this.icon\">{{this.name.charAt(0).toUpperCase() + this.name.slice(1)}}\n      </h2>\n      {{this.description}}\n    </div>\n  </div>\n</span>\n","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Router} from \"@angular/router\";\nimport {MatAutocomplete} from \"@angular/material/autocomplete\";\nimport {MatTree, MatTreeNestedDataSource} from \"@angular/material/tree\";\nimport {map, startWith} from \"rxjs/operators\";\nimport {Observable} from \"rxjs\";\nimport {NestedTreeControl} from \"@angular/cdk/tree\";\n\ninterface PersonNode {\n  name: string;\n  children?: PersonNode[];\n}\n\ninterface PersonNodeTemp {\n  name: string;\n  children?: number[];\n  parent: string;\n}\n\nconst TREE_DATA: PersonNode[] = [];\n\n@Component({\n  selector: 'app-discord-mappings-add',\n  templateUrl: './discord-mappings-add.component.html',\n  styleUrls: ['./discord-mappings-add.component.css']\n})\nexport class DiscordMappingsAddComponent implements OnInit {\n\n  loginForm : FormGroup;\n  selected: string;\n  parents: string[] = [];\n  filteredParents: Observable<string[]>;\n  statusText = \"\";\n  treeControl = new NestedTreeControl<PersonNode>(node => node.children);\n  dataSource = new MatTreeNestedDataSource<PersonNode>();\n\n  constructor(private http: HttpClient, private formBuilder: FormBuilder, private router: Router) {\n    this.loginForm = this.formBuilder.group({\n      name: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(20)]],\n      parent: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(20)]]\n    });\n    this.dataSource.data = TREE_DATA;\n    this.refreshParents()\n    this.filteredParents = this.loginForm.controls[\"parent\"].valueChanges.pipe(\n      startWith(''),\n      map(value => this.filterNames(value))\n    )\n  }\n\n  ngOnInit(): void {\n    setInterval(() => {\n      this.refreshParents();\n    }, 5000)\n    const url : string = \"http://jaketheduck.com/discord-mapping-api/api.php?type=alldata\";\n    this.http.get(url).subscribe((data : {}) => {\n      console.log(\"Data: \" + data);\n      console.log(\"Status: \" + data[\"status\"]);\n      if(data[\"status\"] == 0) {\n        const basis : PersonNodeTemp[] = data[\"players\"].map(p => {\n          return {name: p[\"name\"], parent: p[\"parent\"], children: []};\n        });\n        basis.push({name: \"?\", parent: \"?\", children: []});\n        const qindex = basis.length - 1;\n        basis.forEach(b => {\n          let parentIndex = basis.findIndex(p => p.name == b.parent);\n          const myIndex = basis.findIndex(p => p.name == b.name);\n          if(parentIndex == -1) {\n            basis.push({name: b.parent, parent: \"?\", children: []})\n            parentIndex = basis.length - 1;\n            basis[qindex].children.push(parentIndex);\n          }\n          if(myIndex != parentIndex) {\n            basis[parentIndex].children.push(myIndex);\n          }\n        })\n        console.log(basis);\n        this.dataSource.data = basis.filter(b => b.name == b.parent).map(b => {return this.qqq(basis.findIndex(p => p.name == b.name), basis);});\n        console.log(this.dataSource.data);\n      }\n    })\n  }\n\n  refreshParents() : void {\n    const url : string = \"http://jaketheduck.com/discord-mapping-api/api.php?type=data\";\n    this.http.get(url).subscribe((data : {}) => {\n      console.log(\"Data: \" + data);\n      console.log(\"Status: \" + data[\"status\"]);\n      if(data[\"status\"] == 0) {\n        this.parents = data[\"players\"];\n      }\n    })\n  }\n\n  filterNames(name: string) : string[] {\n    console.log(\"I CRY\");\n   return this.parents.filter(option => option.toLowerCase().includes(name.toLowerCase()))\n  }\n\n  submit(name: string, parent: string) {\n    const url : string = \"http://jaketheduck.com/discord-mapping-api/api.php?type=update&name=\" + name.toLowerCase() + \"&parent=\" + parent.toLowerCase();\n    this.http.get(url).subscribe((data : {}) => {\n      console.log(\"Data: \" + data);\n      console.log(\"Status: \" + data[\"status\"]);\n      if(data[\"status\"] == 0) {\n        this.statusText = name + \" was added successfully\";\n      } else {\n        this.statusText = \"request was not successful with code: \" + data[\"status\"];\n      }\n    })\n  }\n\n  qqq(i : number, basis: PersonNodeTemp[]) : PersonNode {\n    return {name: basis[i].name, children: basis[i].children.map(j => this.qqq(j, basis))}\n  }\n\n  hasChild = (_: number, node: PersonNode) => !!node.children && node.children.length > 0;\n}\n","<form [formGroup]=\"loginForm\" id=\"login-form\">\n  <h2>Discord Graph Menu</h2>\n  <mat-icon class=\"lefticon\">face</mat-icon>\n  <mat-form-field appearance=\"fill\">\n    <input required matInput id=\"name\" formControlName=\"name\" type=\"text\" placeholder=\"Your discord name\" class=\"input\" #user>\n    <mat-error>\n      <div *ngIf=\"loginForm?.controls.name?.errors?.required\">Required Field</div>\n      <div *ngIf=\"loginForm?.controls.name?.errors?.minlength\">Minimum Length is 2</div>\n      <div *ngIf=\"loginForm?.controls.name?.errors?.maxlength\">Maximum Length is 20</div>\n      <div *ngIf=\"loginForm?.controls.name?.errors?.pattern\">Only alphanumeric and space is allowed in names</div>\n    </mat-error>\n  </mat-form-field><br/>\n  <div class=\"spacer\"></div><br/>\n  <h3>Who would you say is the main person who convinced you to join the server? (if godspeed enter quag)</h3>\n  <mat-icon class=\"lefticon\">videogame_asset</mat-icon>\n  <mat-form-field appearance=\"fill\">\n    <input type=\"text\"\n           placeholder=\"Pick one\"\n           matInput\n           formControlName=\"parent\"\n           [matAutocomplete]=\"auto\"\n           #parent>\n    <mat-autocomplete #auto=\"matAutocomplete\">\n      <mat-option *ngFor=\"let parent of this.filteredParents | async\" [value]=\"parent\">\n        {{parent}}\n      </mat-option>\n    </mat-autocomplete>\n  </mat-form-field>\n  <br/>\n  <div class=\"spacer\"></div><br/>\n  <button mat-raised-button color=\"primary\" [disabled]=\"!this.loginForm.valid\" (click)=\"submit(user.value, parent.value)\">Add/Update</button>\n  <div>{{statusText}}</div>\n</form>\n<div class=\"treeView\">\n  <mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\" class=\"example-tree\">\n    <!-- This is the tree node template for leaf nodes -->\n    <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodeToggle>\n      <li class=\"mat-tree-node\">\n        <!-- use a disabled button to provide padding for tree leaf -->\n        <button mat-icon-button disabled></button>\n        {{node.name}}\n      </li>\n    </mat-tree-node>\n    <!-- This is the tree node template for expandable nodes -->\n    <mat-nested-tree-node *matTreeNodeDef=\"let node; when: hasChild\">\n      <li>\n        <div class=\"mat-tree-node\">\n          <button mat-icon-button matTreeNodeToggle\n                  [attr.aria-label]=\"'Toggle ' + node.name\">\n            <mat-icon class=\"mat-icon-rtl-mirror\">\n              {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\n            </mat-icon>\n          </button>\n          {{node.name}}\n        </div>\n        <ul [class.example-tree-invisible]=\"!treeControl.isExpanded(node)\">\n          <ng-container matTreeNodeOutlet></ng-container>\n        </ul>\n      </li>\n    </mat-nested-tree-node>\n  </mat-tree>\n</div>\n","import { Component } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'games';\n}\n\nfunction randomInt(): number {\n  const random = Math.floor(Math.random() * 1000000000000);\n  return random;\n}\n\nexport function getLoginURL(): string {\n  /*const randomVal = randomInt();\n  if(location.protocol === 'https:') {\n    return 'https://jaketheduck.com/games/phpapi/login.php?randomGen=' + randomVal;\n  } else {\n    return 'http://jaketheduck.com/games/phpapi/login.php?randomGen=' + randomVal;\n  }*/\n  return \"/api/login\";\n}\n\nexport function getMafiaURL(): string {\n  /*const randomVal = randomInt();\n  if(location.protocol === 'https:') {\n    return 'https://jaketheduck.com/games/phpapi/mafia.php?randomGen=' + randomVal;\n  } else {\n    return 'http://jaketheduck.com/games/phpapi/mafia.php?randomGen=' + randomVal;\n  }*/\n  return \"/api/mafia\"\n}\n","<div class=\"vcenter\">\n  <div class=\"vholder\">\n  <router-outlet></router-outlet>\n  </div>\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {MatTooltip} from \"@angular/material/tooltip\";\nimport {LobbyItem, LobbySection} from \"../lobby/lobby.component\";\nimport {Player} from \"../game/game.component\";\nimport {AppComponent, getMafiaURL} from \"../app.component\";\nimport {Observable, Subject, Subscription} from \"rxjs\";\nimport {catchError, debounceTime, switchMap} from \"rxjs/operators\";\nimport {empty} from \"rxjs\";\n\ninterface Role {\n  id: number,\n  name: string,\n  team: number,\n  description: string,\n  icon: string,\n}\n\ninterface Character {\n  name: string;\n  avatar: string;\n  alive: boolean;\n  roleID: number;\n  id: number;\n}\n\n@Component({\n  selector: 'app-mafia',\n  templateUrl: './mafia.component.html',\n  styleUrls: ['./mafia.component.scss']\n})\nexport class MafiaComponent implements OnInit {\n  @Input() username: string;\n  userID: number = 0;\n  isLeader: boolean;\n  players: Player[];\n  started: boolean = false;\n  phase: number = 0;\n  isRefreshingStatus: boolean = false;\n  isRefreshingMain: boolean = false;\n  roles: Role[];\n  selectedRoles: Map<Role, number>;\n  roleCounts: { role: Role, count: number }[];\n  hoveredRoles: Map<string, boolean>;\n  characters: Character[];\n  myCharacter: string;\n  myCharacterAvatar: string;\n  lobbySections: LobbySection[];\n  aliveCharacterNames: string[];\n  isAlive: boolean;\n  voteChoice: string;\n  votes: { name: string, vote: string }[];\n  votingTitle: string;\n  voteBarrierID: number\n  isDay: boolean = true;\n  dayCount: number = 1;\n  activeRoles: { role: Role, amount: number }[];\n  willSubject: Subject<string>;\n  myRole: number = -1;\n  characterGroups: {id: number, name: string}[];\n  characterGroupChoice: number = 1;\n  lastCheckedPhase: number = -1;\n\n  constructor(private http: HttpClient) {\n  }\n\n  ngOnInit(): void {\n    console.log(\"Mafia Version 0.1\");\n    this.votes = [];\n    this.roleCounts = [];\n    this.activeRoles = [];\n    this.characterGroups = [];\n    this.aliveCharacterNames = [];\n    this.isAlive = false;\n    this.selectedRoles = new Map<Role, number>();\n    this.hoveredRoles = new Map<string, boolean>();\n    this.lobbySections = [];\n    this.roles = [];\n    this.willSubject = new Subject<string>();\n    this.willSubject.pipe(debounceTime(5000), switchMap(value => this.updateWill(value))).pipe(catchError(() => {return empty()})).subscribe(() => {\n      console.log(\"WILL UPDATED\");\n    });\n    this.refreshStatus();\n    setInterval(() => {\n      this.refreshStatus();\n    }, 2000);\n    const roleURL: string = getMafiaURL() + \"/roles\";\n    this.http.get(roleURL).subscribe((data: {}[]) => {\n      this.roles = data.map(role => {\n        var r: Role = {\n          name: role[\"name\"],\n          team: role[\"team\"],\n          description: role[\"description\"],\n          icon: role[\"icon\"],\n          id: role[\"id\"]\n        };\n        return r;\n      });\n    });\n    const characterGroupURL: string = getMafiaURL() + \"/character/groups\";\n    this.http.get(characterGroupURL).subscribe((data: {}) => {\n      console.log(\"CHARACTER GROUPS: \" + data);\n      this.characterGroups = data[\"info\"];\n    });\n    this.isLeader = false;\n  }\n\n  addRole(role: Role) {\n    if (this.selectedRoles.has(role)) {\n      this.selectedRoles.set(role, this.selectedRoles.get(role) + 1);\n    } else {\n      this.selectedRoles.set(role, 1);\n    }\n    this.roleCounts = this.getSelectedRoleCounts();\n  }\n\n  removeRole(role: Role) {\n    if (this.selectedRoles.has(role)) {\n      this.selectedRoles.set(role, this.selectedRoles.get(role) - 1);\n      if (this.selectedRoles.get(role) <= 0) {\n        this.selectedRoles.delete(role);\n      }\n    }\n    this.roleCounts = this.getSelectedRoleCounts();\n  }\n\n  getSelectedRoleCounts(): { role: Role, count: number }[] {\n    let data = [];\n    for (let key of this.selectedRoles.keys()) {\n      data.push({role: key, count: this.selectedRoles.get(key)});\n    }\n    return data;\n  }\n\n  refreshStatus(): void {\n    console.log(\"REFRESH STATUS\");\n    this.refreshLobbyItems();\n    if (!this.isRefreshingStatus) {\n      this.isRefreshingStatus = true;\n      const url: string = getMafiaURL() + \"/status/\" + this.username;\n      console.log(\"REFRSH STATUS URL\");\n      this.http.get(url).subscribe((data: {}) => {\n        console.log(\"Status Data: \");\n        console.log(data);\n        if (!!data && data[\"status\"] == 0) {\n          this.players = data[\"info\"][\"lobbyData\"];\n          this.started = data[\"info\"][\"gameStatus\"][\"started\"];\n          this.phase = data[\"info\"][\"gameStatus\"][\"phase\"];\n          this.isDay = data[\"info\"][\"gameStatus\"][\"day\"];\n          this.dayCount = data[\"info\"][\"gameStatus\"][\"dayCount\"];\n          if (this.started) {\n            if(this.lastCheckedPhase !== this.phase && !!this.roles && this.roles.length > 0) {\n              this.activeRoles = data[\"info\"][\"activeRoles\"].map(rdata => {\n                const relatedRole = this.roles.find(role => role.name === rdata.name);\n                return {\n                  role: relatedRole,\n                  amount: rdata.amount\n                }\n              });\n              this.lastCheckedPhase = this.phase;\n              this.voteChoice = null;\n            }\n            this.characters = data[\"info\"][\"characters\"];\n            this.aliveCharacterNames = this.characters.filter(char => char.alive).map(char => char.name);\n            this.myCharacter = data[\"info\"][\"myCharacter\"];\n            this.myRole = this.characters.find(char => char.name === this.myCharacter)?.roleID;\n            this.isAlive = this.characters.find(char => char.name === this.myCharacter)?.alive;\n            this.myCharacterAvatar = this.characters.find(char => char.name === this.myCharacter)?.avatar;\n            if(!!data[\"info\"][\"votingData\"] && data[\"info\"][\"votingData\"].length > 0) {\n              this.votes = data[\"info\"][\"votingData\"][0][\"list\"];\n              this.votingTitle = data[\"info\"][\"votingData\"][0][\"title\"];\n              this.voteBarrierID = data[\"info\"][\"votingData\"][0][\"id\"]\n            } else {\n              this.votes = [];\n              this.votingTitle = \"\";\n              this.voteBarrierID = 0;\n            }\n          } else {\n            this.activeRoles = [];\n          }\n        }\n        this.isRefreshingStatus = false;\n      })\n    }\n    this.isLeader = !!this.players && this.players.length > 0 && this.username === this.players[0].name;\n    console.log(\"IS LEADER: \" + this.isLeader);\n    if (!this.isRefreshingMain && this.isLeader) {\n      this.isRefreshingMain = true;\n      const url: string = getMafiaURL() + \"&action=main\";\n      this.http.get(url).pipe(catchError(() => {return empty()})).subscribe((data: {}) => {\n        this.isRefreshingMain = false;\n      });\n    }\n  }\n\n  getCharacterIDFromCharacterName(name: string): number {\n    return this.characters.find(char => char.name === name)?.id;\n  }\n\n  getLobbyRoleInfo(roleID: number): Role {\n    return this.roles.find(role => role.id === roleID);\n  }\n\n  refreshLobbyItems(): void {\n    if (this.started) {\n      const aliveLobbyItems = this.characters.filter(char => char.alive).map(character => {\n        const roleInfo = this.getLobbyRoleInfo(character.roleID)\n        return {\n          name: character.name,\n          time: 0,\n          icon: character.avatar,\n          isGrayed: false,\n          roleIcon: roleInfo?.icon,\n          roleName: roleInfo?.name,\n          roleDescription: roleInfo?.description\n        };\n      });\n      const deadLobbyItems = this.characters.filter(char => !char.alive).map(char => {\n        const roleInfo = this.getLobbyRoleInfo(char.roleID)\n        return {\n          name: char.name,\n          time: 0,\n          icon: char.avatar,\n          isGrayed: true,\n          roleIcon: roleInfo?.icon,\n          roleName: roleInfo?.name,\n          roleDescription: roleInfo?.description\n        };\n      });\n      const aliveLobby: LobbySection = {\n        title: \"Players\",\n        items: aliveLobbyItems\n      };\n      const deadLobby: LobbySection = {\n        title: \"Graveyard\",\n        items: deadLobbyItems\n      };\n      this.lobbySections = [aliveLobby, deadLobby];\n    } else if (!!this.players) {\n      this.lobbySections = [{\n        title: \"Players\",\n        items:\n          this.players.map(player => {\n            let item: LobbyItem = {\n              name: player.name,\n              time: player.time,\n              icon: null,\n              isGrayed: false,\n              roleIcon: null,\n              roleName: null,\n              roleDescription: null\n            }\n            return item;\n          })\n      }];\n    } else {\n      this.lobbySections = [];\n    }\n  }\n\n  getChatName(): string {\n    if (!!this.myCharacter && this.started) {\n      return this.myCharacter;\n    } else {\n      return this.username;\n    }\n  }\n\n  getChatAvatar(): string {\n    if (!!this.myCharacterAvatar && this.started) {\n      return this.myCharacterAvatar\n    } else {\n      return 'https://cdn.discordapp.com/emojis/622202821940609065.png?v=1';\n    }\n  }\n\n  startGame(): void {\n    let url: string = getMafiaURL() + \"/setup?group=\" + this.characterGroupChoice;\n    this.roles.forEach(role => {\n      let roleCount = this.selectedRoles.get(role);\n      roleCount = !!roleCount ? roleCount : 0;\n      url += \"&\" + role.name + \"=\" + roleCount;\n    });\n    this.http.get(url).subscribe((data: {}) => {});\n  }\n\n  canStartGame(): boolean {\n    let roles = 0;\n    for (const roleCount of this.roleCounts) {\n      roles += roleCount.count;\n    }\n    return roles === this.players.length;\n  }\n\n  sendDayVote(voteName: string, containerID: number): void {\n    let url: string = getMafiaURL() + \"/vote/\" + this.username + \"/\" + containerID + \"/\" + voteName;\n    this.http.get(url).subscribe((data: {}) => {\n      console.log(\"Vote sent\");\n    });\n  }\n\n  updateWill(will: string): Observable<any> {\n    let url: string = getMafiaURL() + \"/will\";\n    const body = {name: this.username, will: will}\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n      })\n    };\n    return this.http.post(url, body, httpOptions);\n  }\n}\n","<div class=\"mafia\">\n  <div class=\"mafia-topbar\">\n    <div class=\"role-topbar-item\" *ngFor=\"let item of this.activeRoles\">\n      <app-icon-with-tooltip\n        *ngIf=\"!!item.role\"\n        [name]=\"item.role.name\"\n        [icon]=\"item.role.icon\"\n        [description]=\"item.role.description\">\n      </app-icon-with-tooltip>\n      {{item.amount}}\n    </div>\n  </div>\n  <div class=\"mafia-main\">\n    <app-lobby [sections]=\"this.lobbySections\" [active]=\"this.getChatName()\"></app-lobby>\n    <app-chat [phase]=\"this.phase\"\n              [username]=\"this.username\"\n              [userID]=\"this.userID\"\n              [characterName]=\"this.getChatName()\"\n              [characterAvatar]=\"this.getChatAvatar()\"\n              [isDead]=\"!this.isAlive && this.started\"\n              [canSend]=\"!this.isAlive || !this.started || this.isDay || (!this.isDay && this.myRole === 2)\">\n    </app-chat>\n    <div class=\"mafia-sidebar\">\n      <div *ngIf=\"!this.started && isLeader\" class=\"panel-item\">\n        <div>\n          <button class=\"roleButton\" (click)=\"this.addRole(role)\" *ngFor=\"let role of this.roles\">\n            <app-icon-with-tooltip [name]=\"role.name\"\n                                   [icon]=\"role.icon\"\n                                   [description]=\"role.description\">\n            </app-icon-with-tooltip>\n          </button>\n        </div>\n        <div>\n          <div class=\"selectedRoleData\" *ngFor=\"let roleData of this.roleCounts\"\n               (click)=\"this.removeRole(roleData.role)\">\n            <app-icon-with-tooltip [name]=\"roleData.role.name\"\n                                   [icon]=\"roleData.role.icon\"\n                                   [description]=\"roleData.role.description\">\n            </app-icon-with-tooltip>\n            {{roleData.count}}\n          </div>\n        </div>\n        <mat-form-field appearance=\"fill\" class=\"selection\">\n          <mat-label>Character Set</mat-label>\n          <mat-select [(value)]=\"this.characterGroupChoice\">\n            <mat-option\n              *ngFor=\"let charGroup of this.characterGroups\"\n              [value]=\"charGroup.id\">\n              {{charGroup.name}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n        <button mat-button\n                [class.startGameButton]=\"this.canStartGame()\"\n                [class.disabledStartGameButton]=\"!this.canStartGame()\"\n                [disabled]=\"!this.canStartGame()\"\n                (click)=\"this.startGame()\">Start Game\n        </button>\n      </div>\n      <h2 *ngIf=\"this.started\">{{this.isDay ? 'Day' : 'Night'}} {{this.dayCount}}</h2>\n      <div *ngIf=\"this.started && !this.isDay\" class=\"willArea\">\n        <label>Write a Will</label>\n        <mat-form-field class=\"willFormField\">\n          <mat-label>Write some words for when you die</mat-label>\n          <textarea (keyup)=\"this.willSubject.next(will.value)\" matInput placeholder=\"I cry for I die\" #will></textarea>\n        </mat-form-field>\n      </div>\n      <div class=\"panel-item mat-elevation-z8\" *ngIf=\"this.started && this.isAlive && this.votes.length > 0\">\n        <h2>{{this.votingTitle}}</h2>\n        <h3>Current Choices</h3>\n        <div>\n          <table>\n            <tr *ngFor=\"let dayVote of this.votes\">\n              <td>\n                {{dayVote.name}}:\n              </td>\n              <td>\n                {{dayVote.vote}}\n              </td>\n            </tr>\n          </table>\n        </div>\n        <mat-form-field appearance=\"fill\" class=\"selection\">\n          <mat-label>Choose who to vote for</mat-label>\n          <mat-select [(value)]=\"this.voteChoice\">\n            <mat-option\n              [value]=\"'No One'\"\n              (click)=\"this.sendDayVote('No One', this.voteBarrierID)\">\n              No One\n            </mat-option>\n            <mat-option\n              *ngFor=\"let char of this.aliveCharacterNames\"\n              [value]=\"char\"\n              (click)=\"this.sendDayVote(char, this.voteBarrierID)\">\n              {{char}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n    </div>\n  </div>\n</div>\n","import {BrowserModule} from '@angular/platform-browser';\nimport {HttpClientModule} from '@angular/common/http';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations'\nimport {MatAutocompleteModule} from \"@angular/material/autocomplete\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\nimport {MatInputModule} from \"@angular/material/input\";\nimport {MatSelectModule} from \"@angular/material/select\";\nimport {MatOptionModule} from \"@angular/material/core\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {MatTreeModule} from \"@angular/material/tree\";\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport {NgModule} from '@angular/core';\nimport {AppComponent} from './app.component';\nimport {LoginComponent} from './login/login.component';\nimport { LobbyComponent } from './lobby/lobby.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { Fe3hauComponent } from './fe3hau/fe3hau.component';\nimport { BeanPreviewComponent } from './bean-preview/bean-preview.component';\nimport { FeBeanPreviewComponent } from './fe-bean-preview/fe-bean-preview.component'\nimport {MatDividerModule} from \"@angular/material/divider\";\nimport { FeBeanListComponent } from './fe-bean-list/fe-bean-list.component';\nimport { VisualNovelComponent } from './visual-novel/visual-novel.component';\nimport { DiscordMappingsAddComponent } from './discord-mappings-add/discord-mappings-add.component';\nimport { MafiaComponent } from './mafia/mafia.component';\nimport { ChatComponent } from './chat/chat.component';\nimport {MatTooltipModule} from \"@angular/material/tooltip\";\nimport { GameComponent } from './game/game.component';\nimport { IconWithTooltipComponent } from './icon-with-tooltip/icon-with-tooltip.component';\n\nconst routes: Routes = [\n  { path: 'discord-mapping', component: DiscordMappingsAddComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'game/:game/:username', component: GameComponent },\n  { path: 'display', component: FeBeanListComponent },\n  { path: 'visual-novel', component: VisualNovelComponent },\n  { path: '', redirectTo: '/login', pathMatch: 'full' },\n];\n\n@NgModule\n({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    LobbyComponent,\n    Fe3hauComponent,\n    BeanPreviewComponent,\n    FeBeanPreviewComponent,\n    FeBeanListComponent,\n    VisualNovelComponent,\n    DiscordMappingsAddComponent,\n    MafiaComponent,\n    ChatComponent,\n    GameComponent,\n    IconWithTooltipComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatIconModule,\n    ReactiveFormsModule,\n    MatAutocompleteModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatOptionModule,\n    MatSelectModule,\n    MatTreeModule,\n    MatButtonModule,\n    RouterModule.forRoot(routes),\n    MatDividerModule,\n    MatTooltipModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {ActivatedRoute} from \"@angular/router\";\n\n//Beans from https://among-us.fandom.com/wiki/Category:Colors\n//Hats from https://among-us.fandom.com/wiki/Cosmetics\n\n@Component({\n  selector: 'app-fe3hau',\n  templateUrl: './fe3hau.component.html',\n  styleUrls: ['./fe3hau.component.css']\n})\nexport class Fe3hauComponent implements OnInit {\n  name: string;\n  game: string;\n  characterName: string;\n  colorID: number;\n  hatID: number;\n  startingNewRound = false;\n  constructor(private http: HttpClient, private activatedRoute : ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.name = this.activatedRoute.snapshot.paramMap.get(\"username\");\n    this.game = this.activatedRoute.snapshot.paramMap.get(\"game\");\n    this.refreshPreview();\n    setInterval(() => {\n      this.refreshPreview();\n    }, 5000)\n  }\n\n  refreshPreview() : void {\n\n    const url : string = \"http://jaketheduck.com/games/phpapi/gamedata.php?type=mapping&name=\" + this.name + \"&game=\" + this.game;\n    this.http.get(url).subscribe((data : {}) => {\n      if(data[\"status\"] == 0) {\n        this.characterName = data[\"name\"];\n        this.colorID = data[\"colorID\"];\n        this.hatID = data[\"hatID\"];\n      }\n    })\n  }\n\n  startRound() : void {\n    this.startingNewRound = true;\n    const url : string = \"http://jaketheduck.com/games/phpapi/gamedata.php?type=setup&game=fe3hau\";\n    this.http.get(url).subscribe((data : {}) => {\n      if(data[\"status\"] == 0) {\n        console.log(\"New round started successfully\");\n      }\n      this.startingNewRound = false;\n    })\n  }\n\n}\n","<div class=\"container\">\n  <app-bean-preview [colorID]=\"this.colorID\" [hatID]=\"this.hatID\" scale=\"0.5\"></app-bean-preview>\n  <div>\n    Name: {{this.characterName}}\n  </div>\n  <div>\n    Color: {{this.colorID}}\n  </div>\n  <div>\n    Hat: {{this.hatID}}\n  </div>\n  <div>\n    <button mat-raised-button color=\"primary\" [disabled]=\"this.startingNewRound\" (click)=\"this.startRound()\">Roll New Round</button>\n  </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Component({\n  selector: 'app-fe-bean-list',\n  templateUrl: './fe-bean-list.component.html',\n  styleUrls: ['./fe-bean-list.component.css']\n})\nexport class FeBeanListComponent implements OnInit {\n  characters : string[];\n  constructor(private http : HttpClient) { }\n\n  ngOnInit(): void {\n    const url: string = \"http://jaketheduck.com/games/phpapi/gamedata.php?type=characters\";\n    this.http.get(url).subscribe((data: {}) => {\n      console.log(\"Data: \" + data);\n      console.log(\"Status: \" + data[\"status\"]);\n      if (data[\"status\"] == 0) {\n        this.characters = data[\"chars\"];\n      }\n    });\n  }\n\n}\n","<div class=\"beanPreview\">\n<div *ngFor=\"let character of this.characters\" class = \"beanPreviewElement\">\n  <h2>{{character}}</h2>\n  <app-fe-bean-preview character=\"{{character}}\"></app-fe-bean-preview>\n</div>\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {ActivatedRoute} from \"@angular/router\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {TimeInterval} from \"rxjs\";\n\nexport interface LobbyItem {\n  name: string;\n  icon: string;\n  time: number;\n  isGrayed: boolean;\n  roleName: string;\n  roleIcon: string;\n  roleDescription: string;\n}\n\nexport interface LobbySection {\n  title: string;\n  items: LobbyItem[];\n}\n\n@Component({\n  selector: 'app-lobby',\n  templateUrl: './lobby.component.html',\n  styleUrls: ['./lobby.component.css']\n})\nexport class LobbyComponent implements OnInit {\n  @Input() sections: LobbySection[];\n  @Input() active: string;\n  constructor() { }\n\n  ngOnInit(): void {\n\n  }\n}\n","<div class=\"view\">\n  <div id=\"lobby\">\n    <div class=\"lobby-table\">\n      <div *ngFor=\"let section of this.sections\">\n        <div><h2>{{section.title}}</h2></div>\n        <div *ngFor='let player of section.items; let index = index' class=\"lobby-table-div\"\n             [class.lobby-table-even]=\"0 === index % 2 && player.name !== this.active\"\n             [class.lobby-table-active]=\"player.name === this.active\">\n          <div class=\"status-icon\">\n            <app-icon-with-tooltip\n              [name]=\"player.roleName\" [icon]=\"player.roleIcon\" [description]=\"player.roleDescription\"\n              *ngIf=\"!!player.roleName\">\n            </app-icon-with-tooltip>\n            <mat-icon *ngIf=\"player.time < 20 && !player.icon\" class=\"lefticon\">face</mat-icon>\n            <mat-icon *ngIf=\"player.time >= 20 && player.time < 40 && !player.icon\" class=\"lefticon\">access_alarm\n            </mat-icon>\n            <mat-icon *ngIf=\"player.time >= 40 && !player.icon\" class=\"lefticon\">warning</mat-icon>\n          </div>\n          <img class=\"avatar\" [src]=\"player.icon\" *ngIf=\"!!player.icon\" [ngClass]=\"{'gray':player.isGrayed}\">\n          {{player.name}}\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {getLoginURL} from \"../app.component\";\n\nexport interface Player {\n  name : string;\n  time : number;\n}\n\n@Component({\n  selector: 'app-game',\n  templateUrl: './game.component.html',\n  styleUrls: ['./game.component.css']\n})\nexport class GameComponent implements OnInit {\n  username : string;\n  game : string;\n  players: Player[];\n\n\n  constructor(private http: HttpClient, private activatedRoute : ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.username = this.activatedRoute.snapshot.paramMap.get(\"username\");\n    this.game = this.activatedRoute.snapshot.paramMap.get(\"game\");\n    /*this.refreshPlayers();\n    setInterval(() => {\n      this.refreshPlayers();\n    }, 1000)*/\n  }\n\n  refreshPlayers() : void {\n\n    const url : string = getLoginURL() + \"&type=update&user=\" + this.username + \"&game=\" + this.game;\n\n    console.log(\"UPDATING FROM \" + url);\n    this.http.get(url).subscribe((data : {}) => {\n      console.log(data);\n      if(data[\"status\"] == 0) {\n        this.players = data[\"players\"].map(pdata => {\n          var p : Player = {name: pdata[\"name\"], time: pdata[\"time\"]};\n          return p;\n        })\n      }\n    })\n  }\n}\n","<div id=\"game\">\n  <app-fe3hau *ngIf=\"this.game === 'fe3hau'\">\n  </app-fe3hau>\n  <app-mafia [username]=\"this.username\" *ngIf=\"this.game === 'mafia'\">\n  </app-mafia>\n</div>\n","import {Component, Input, OnChanges, OnInit, SimpleChange, SimpleChanges} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {MatDivider} from \"@angular/material/divider\";\n\n@Component({\n  selector: 'app-bean-preview',\n  templateUrl: './bean-preview.component.html',\n  styleUrls: ['./bean-preview.component.css']\n})\nexport class BeanPreviewComponent implements OnInit, OnChanges {\n  @Input() colorID : string;\n  @Input() hatID : string;\n  @Input() scale: number;\n  width : number;\n  colorSrc: string = \"\";\n  hatSrc: string = \"\";\n  hatdx: number;\n  hatdy: number;\n  showPrimary: boolean = true;\n\n  constructor(private http: HttpClient, private activatedRoute: ActivatedRoute) {\n  }\n\n  ngOnInit(): void {\n    //var colorID = this.activatedRoute.snapshot.paramMap.get(\"color\");\n    //var hatID = this.activatedRoute.snapshot.paramMap.get(\"hat\");\n    this.runWithColorAndHat(this.colorID, this.hatID);\n  }\n\n  ngOnChanges(changes: SimpleChanges) : void {\n    this.runWithColorAndHat(this.colorID, this.hatID);\n  }\n\n  runWithColorAndHat(colorID: string, hatID: string): void {\n    if(colorID == null || hatID == null) {\n      return;\n    }\n    console.log(\"Updating color and hat\");\n    const url: string = \"http://jaketheduck.com/games/phpapi/gamedata.php?type=beandata&color=\" + colorID + \"&hat=\" + hatID;\n    this.http.get(url).subscribe((data: {}) => {\n      console.log(\"Data: \" + data);\n      console.log(\"Status: \" + data[\"status\"]);\n      if (data[\"status\"] == 0) {\n        console.log(\"Color src: \" + data[\"colorSrc\"]);\n        this.colorSrc = data[\"colorSrc\"];\n        this.hatSrc = data[\"hatSrc\"];\n        this.hatdx = data[\"hatdx\"];\n        this.hatdy = data[\"hatdy\"];\n        this.width = data[\"width\"];\n        console.log(this.hatdx);\n        console.log(this.hatdy);\n      }\n    })\n  }\n\n}\n","<div class=\"container\" [style.width.px]=\"200 * this.scale\" [style.height.px]=\"350 * this.scale\">\n  <div class=\"hat\">\n    <img class=\"hat\" src=\"{{this.hatSrc}}\"  [style.width.px]=\"this.scale * this.width\" [style.top.px]=\"this.scale * this.hatdy\" [style.left.px]=\"this.scale * this.hatdx\"/>\n  </div>\n  <div class=\"bean\">\n    <img class=\"bean\" [style.width.px]=\"200 * this.scale\" [style.top.px]=\"65 * this.scale\" src=\"{{this.colorSrc}}\"/>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {MatIcon} from \"@angular/material/icon\";\nimport {MatFormField} from \"@angular/material/form-field\";\nimport {MatInput} from \"@angular/material/input\";\nimport {MatSelect} from \"@angular/material/select\";\nimport {MatOption} from \"@angular/material/core\";\nimport {FormControl} from \"@angular/forms\";\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {Router} from \"@angular/router\";\nimport {getLoginURL} from \"../app.component\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\n@Injectable()\nexport class LoginComponent implements OnInit {\n  loginForm : FormGroup;\n  selected = 'fe3hau';\n  constructor(private http: HttpClient, private formBuilder: FormBuilder, private router: Router) {\n    this.loginForm = this.formBuilder.group({\n      name: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(20), Validators.pattern(\"^[a-zA-Z0-9]*$\")]],\n      game: ['', Validators.required]\n    });\n  }\n\n  join(user: string, game: string) : void {\n    user = user.toLowerCase();\n    const url : string = getLoginURL() + \"/\" + game + \"/user/\" + user + \"/create\";\n    this.http.get(url).subscribe((data : {}) => {\n      console.log(\"Data: \" + data);\n      console.log(\"Status: \" + data[\"status\"]);\n      if(data[\"status\"] == 0) {\n        console.log(\"logging in\");\n        this.router.navigate(['./game', game, user]);\n      }\n    })\n    console.log(user + \" has logged into \" + game);\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<form [formGroup]=\"loginForm\" id=\"login-form\">\n  <h2>Join Game Menu</h2>\n  <mat-icon class=\"lefticon\">face</mat-icon>\n  <mat-form-field appearance=\"fill\">\n    <input required matInput id=\"user\" formControlName=\"name\" type=\"text\" placeholder=\"username\" class=\"input\" #user>\n    <mat-error>\n      <div *ngIf=\"loginForm?.controls.name?.errors?.required\">Required Field</div>\n      <div *ngIf=\"loginForm?.controls.name?.errors?.minlength\">Minimum Length is 3</div>\n      <div *ngIf=\"loginForm?.controls.name?.errors?.maxlength\">Maximum Length is 20</div>\n      <div *ngIf=\"loginForm?.controls.name?.errors?.pattern\">Only alphanumeric and space is allowed in names</div>\n    </mat-error>\n  </mat-form-field><br/>\n  <div class=\"spacer\"></div><br/>\n  <mat-icon class=\"lefticon\">videogame_asset</mat-icon>\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Select an option</mat-label>\n    <mat-select [(value)]=\"selected\" required formControlName=\"game\">\n      <mat-option value=\"fe3hau\">FE3H Among Us</mat-option>\n      <mat-option value=\"mafia\">Mafia</mat-option>\n    </mat-select>\n    <mat-error>\n      <span *ngIf=\"loginForm?.controls.name?.errors?.required\">Required Field</span>\n    </mat-error>\n  </mat-form-field>\n    <br/>\n  <div class=\"spacer\"></div><br/>\n  <button mat-raised-button color=\"primary\" (click)=\"join(user.value, selected)\">Join</button>\n</form>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}