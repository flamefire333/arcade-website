{"version":3,"sources":["./src/app/chat/chat.component.ts","./src/app/visual-novel/visual-novel.component.ts","./src/app/fe-bean-preview/fe-bean-preview.component.ts","./src/app/bean-preview/bean-preview.component.html","./src/app/fe-bean-preview/fe-bean-preview.component.html","./src/environments/environment.ts","./src/app/icon-with-tooltip/icon-with-tooltip.component.ts","./src/app/discord-mappings-add/discord-mappings-add.component.html","./src/app/discord-mappings-add/discord-mappings-add.component.ts","./src/app/game/game.component.html","./src/app/lobby/lobby.component.html","./src/app/fe3hau/fe3hau.component.html","./src/app/app.component.ts","./src/app/mafia/mafia.component.ts","./src/app/chat/chat.component.html","./src/app/login/login.component.html","./src/app/app.module.ts","./src/app/fe3hau/fe3hau.component.ts","./src/app/fe-bean-list/fe-bean-list.component.ts","./src/app/lobby/lobby.component.ts","./src/app/fe-bean-list/fe-bean-list.component.html","./src/app/game/game.component.ts","./src/app/icon-with-tooltip/icon-with-tooltip.component.html","./src/app/bean-preview/bean-preview.component.ts","./src/app/mafia/mafia.component.html","./src/app/visual-novel/visual-novel.component.html","./src/app/login/login.component.ts","./src/app/app.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;AAWA;AAAA;AAAA;AAAA;AAAA;AAA6D;AAChB;AAChB;AA6BtB,MAAM,aAAa;IAsBxB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAhBpC,qBAAgB,GAAG,KAAK,CAAC;QACzB,gBAAW,GAAG,CAAC,CAAC;QAChB,cAAS,GAAG,CAAC,CAAC;QAEd,aAAQ,GAAG,CAAC,CAAC;IAab,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,QAAQ,GAAG,IAAI,GAAG,EAAkB,CAAC;QAC1C,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,EAAE,8DAA8D,CAAC,CAAC;QAC9F,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,EAAE,8DAA8D,CAAC,CAAC;QAC1F,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAW,EAAE,8DAA8D,CAAC,CAAC;QAC/F,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,YAAY,EAAE,8DAA8D,CAAC,CAAC;QAChG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,SAAS,EAAE,8DAA8D,CAAC,CAAC;QAC7F,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,EAAE,8DAA8D,CAAC,CAAC;QAC3F,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,EAAE,8DAA8D,CAAC,CAAC;QAC9F,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,EAAE,8DAA8D,CAAC,CAAC;QAC5F,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,EAAE,8DAA8D,CAAC,CAAC;QAC1F,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,EAAE,8DAA8D,CAAC,CAAC;QAC1F,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,EAAE,8DAA8D,CAAC,CAAC;QAC1F,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAW,EAAE,8DAA8D,CAAC,CAAC;QAC/F,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,EAAE,8DAA8D,CAAC,CAAC;QAC3F,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAW,EAAE,8DAA8D,CAAC,CAAC;QAC/F,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,cAAc,EAAE,8DAA8D,CAAC,CAAC;QAClG,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE;YACxC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACzB;QACD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACpG,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAC9B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7D,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,WAAW,GAAG,IAAI,4CAAO,EAAO,CAAC;QACtC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;QAC7D,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,WAAW,CAAC,GAAG,EAAE;YACf,IAAI,CAAC,WAAW,EAAE,CAAC;QACrB,CAAC,EAAE,IAAI,CAAC,CAAC;IACX,CAAC;IAED,cAAc,CAAC,QAAkB;QAC/B,MAAM,IAAI,GAAG,EAAE,CAAC;QAChB,IAAI,cAAc,GAAG,EAAE,CAAC;QACxB,IAAI,YAAY,GAAG,KAAK,CAAC;QACzB,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YACxC,IAAI,IAAI,KAAK,GAAG,EAAE;gBAChB,IAAI,YAAY,EAAE;oBAChB,MAAM,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC;oBAClD,IAAI,CAAC,CAAC,KAAK,EAAE;wBACX,IAAI,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,cAAc,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC;wBAC/D,cAAc,GAAG,EAAE,CAAC;wBACpB,YAAY,GAAG,KAAK,CAAC;qBACtB;yBAAM;wBACL,IAAI,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,GAAG,GAAG,cAAc,EAAE,OAAO,EAAE,KAAK,EAAC,CAAC,CAAC;wBACxD,cAAc,GAAG,EAAE,CAAC;qBACrB;iBACF;qBAAM;oBACL,IAAI,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,cAAc,EAAE,OAAO,EAAE,KAAK,EAAC,CAAC,CAAC;oBAClD,cAAc,GAAG,EAAE,CAAC;oBACpB,YAAY,GAAG,IAAI,CAAC;iBACrB;aACF;iBAAM;gBACL,cAAc,GAAG,cAAc,GAAG,IAAI,CAAC;aACxC;QACH,CAAC,CAAC,CAAC;QACH,IAAI,YAAY,EAAE;YAChB,IAAI,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,GAAG,GAAG,cAAc,EAAE,OAAO,EAAE,KAAK,EAAC,CAAC,CAAC;SACzD;aAAM;YACL,IAAI,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,cAAc,EAAE,OAAO,EAAE,KAAK,EAAC,CAAC,CAAC;SACnD;QACD,OAAO;YACL,MAAM,EAAE,QAAQ,CAAC,MAAM;YACvB,MAAM,EAAE,QAAQ,CAAC,MAAM;YACvB,IAAI,EAAE,QAAQ,CAAC,IAAI;YACnB,KAAK,EAAE,QAAQ,CAAC,KAAK;YACrB,IAAI;SACL,CAAC;IACJ,CAAC;IAED,aAAa;QACX,IAAI,IAAI,CAAC,eAAe,KAAK,EAAE,EAAE;YAC/B,OAAO,IAAI,CAAC,eAAe,CAAC;SAC7B;aAAM;YACL,OAAO,IAAI,CAAC,aAAa,CAAC;SAC3B;IACH,CAAC;IAED,cAAc,CAAC,SAAiB;QAC9B,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IACtC,CAAC;IAED,cAAc;QACZ,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,OAAO,CAAC,CAAC,CAAC;SACX;aAAM;YACL,OAAO,CAAC,CAAC;SACV;IACH,CAAC;IAED,uBAAuB,CAAC,KAAa;QACnC,MAAM,WAAW,GAAW,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,CAAC;QAC/D,MAAM,KAAK,GAAG,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACrC,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;YACpB,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,cAAc,CAAC;YAC7D,KAAK,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC,GAAG,GAAG,GAAG,KAAK,GAAG,GAAG,CAAC;YACpE,OAAO,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACxB;aAAM;YACL,OAAO,EAAE,CAAC;SACX;IACH,CAAC;IAED,kBAAkB,CAAC,KAAe,EAAE,QAAgB;QAClD,IAAI,UAAU,GAAG,CAAC,CAAC;QACnB,IAAI,SAAS,GAAG,CAAC,CAAC;QAClB,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;YACxB,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC;YAC/B,IAAI,QAAQ,IAAI,UAAU,GAAG,UAAU,EAAE;gBACvC,OAAO,SAAS,CAAC;aAClB;YACD,UAAU,IAAI,UAAU,GAAG,CAAC,CAAC;YAC7B,SAAS,EAAE,CAAC;SACb;QACD,OAAO,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;IAC1B,CAAC;IAED,SAAS,CAAC,KAAoB;QAC5B,IAAI,KAAK,CAAC,IAAI,KAAK,OAAO,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,KAAK,CAAC,EAAE;YAC9E,MAAM,GAAG,GAAW,kEAAW,EAAE,GAAG,YAAY,CAAC;YACjD;;;;;;sEAM0D;YAC1D,MAAM,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC;YAClC,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC;YAEjC,MAAM,IAAI,GAAG;gBACX,OAAO;gBACP,KAAK,EAAE,UAAU;gBACjB,MAAM,EAAE,IAAI,CAAC,aAAa,EAAE;gBAC5B,SAAS,EAAE,IAAI,CAAC,QAAQ;gBACxB,cAAc,EAAE,IAAI,CAAC,aAAa;gBAClC,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK;aAC5C,CAAC;YACF,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,GAAG,EAAE,CAAC;YACxC,MAAM,WAAW,GAAG;gBAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;oBACvB,cAAc,EAAE,kBAAkB;iBACnC,CAAC;aACH,CAAC;YACF,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC,SAAS,CAAC,CAAC,IAAuC,EAAE,EAAE;gBAC3F,OAAO,CAAC,GAAG,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC5D,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC9B,CAAC,CAAC,CAAC;SACJ;QACD,MAAM,WAAW,GAAW,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,CAAC;QAC/D,MAAM,KAAK,GAAG,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACrC,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;YACpB,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,cAAc,CAAC;YAC7D,IAAI,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC,CAAC;YAClE,IAAI,WAAW,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;gBAC/B,WAAW,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBACpC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,UAAU,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;aAC9G;iBAAM;gBACL,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;aAC1B;SACF;aAAM;YACL,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;SAC1B;IACH,CAAC;IAED,WAAW;QACT,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC;QAC9B,IAAI,UAAU,KAAK,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE;YACvD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;YAC7B;+GACmG;YACnG,IAAI,UAAU,GAAG,IAAI,CAAC,QAAQ,EAAE;gBAC9B,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;gBACrB,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC;gBAC5B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;aAChC;YACD,MAAM,GAAG,GAAW,kEAAW,EAAE,GAAG,aAAa,GAAG,IAAI,CAAC,QAAQ,GAAG,GAAG,GAAG,UAAU,GAAG,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC;YAC9G,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;gBAClC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC5B,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;YAChC,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,aAAa,CAAC,IAAS;QACrB,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;YACrB,MAAM,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC;YACpC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;gBACxB,MAAM,GAAG,GAAW,CAAC,KAAK,CAAC,EAAE,CAAC;gBAC9B,IAAI,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,WAAW,EAAE;oBAC9B,IAAI,CAAC,WAAW,GAAG,GAAG,GAAG,CAAC,CAAC;iBAC5B;YACH,CAAC,CAAC,CAAC;YACH,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,MAAM,QAAQ,GAA4B,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,IAAI,UAAU,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;gBACtG,MAAM,CAAC,GAAa;oBAClB,MAAM,EAAE,KAAK,CAAC,IAAI;oBAClB,MAAM,EAAE,KAAK,CAAC,MAAM;oBACpB,OAAO,EAAE,KAAK,CAAC,OAAO;oBACtB,IAAI,EAAE,KAAK,CAAC,WAAW;oBACvB,KAAK,EAAE,KAAK,CAAC,KAAK;iBACnB,CAAC;gBACF,MAAM,CAAC,GAA0B,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;gBACxD,OAAO,CAAC,CAAC;YACX,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;YACb,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK,CAAC,CAAC;YAC9E,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;gBACvB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAChD;YACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC3B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACzB;IACH,CAAC;IAED,sBAAsB;QACpB,MAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC;QAChC,MAAM,OAAO,GAA2B;YACtC,CAAC,CAAC,MAAM,CAAC,EAAE,0FAA0F,CAAC;YACtG,CAAC,CAAC,SAAS,CAAC,EAAE,4FAA4F,CAAC;YAC3G,CAAC,CAAC,MAAM,CAAC,EAAE,mHAAmH,CAAC;YAC/H,CAAC,CAAC,UAAU,EAAE,QAAQ,EAAE,UAAU,CAAC,EAAE,4FAA4F,CAAC;YAClI,CAAC,CAAC,QAAQ,EAAE,OAAO,CAAC,EAAE,mHAAmH,CAAC;YAC1I,CAAC,CAAC,OAAO,EAAE,WAAW,CAAC,EAAE,4GAA4G,CAAC;YACtI,CAAC,CAAC,QAAQ,CAAC,EAAE,qHAAqH,CAAC;YACnI,CAAC,CAAC,QAAQ,CAAC,EAAE,mHAAmH,CAAC;YACjI,CAAC,CAAC,OAAO,CAAC,EAAE,qHAAqH,CAAC;YAClI,CAAC,CAAC,OAAO,CAAC,EAAE,uHAAuH,CAAC;YACpI,CAAC,CAAC,OAAO,CAAC,EAAE,mHAAmH,CAAC;YAChI,CAAC,CAAC,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,CAAC,EAAE,qHAAqH,CAAC;YAC5L,CAAC,CAAC,UAAU,CAAC,EAAE,0FAA0F,CAAC;YAC1G,CAAC,CAAC,QAAQ,CAAC,EAAE,4FAA4F,CAAC;YAC1G,CAAC,CAAC,MAAM,EAAE,YAAY,CAAC,EAAE,qHAAqH,CAAC;YAC/I,CAAC,CAAC,UAAU,EAAE,YAAY,CAAC,EAAE,qHAAqH,CAAC;YACnJ,CAAC,CAAC,YAAY,CAAC,EAAE,4FAA4F,CAAC;YAC9G,CAAC,CAAC,UAAU,CAAC,EAAE,mHAAmH,CAAC;YACnI,CAAC,CAAC,WAAW,EAAE,UAAU,CAAC,EAAE,qGAAqG,CAAC;YAClI,CAAC,CAAC,UAAU,CAAC,EAAE,qHAAqH,CAAC;SACtI,CAAC;QACF,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;YACvB,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE;gBAC/B,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,YAAY,CAAC,KAAK,IAAI,EAAE;oBACnD,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;iBAChC;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;CACF;;;;;;;;;;;;;;;;;;;;;;;;;ACrTD;AAAA;AAAO,MAAM,oBAAoB;IAE/B,gBAAgB,CAAC;IAQjB,QAAQ;QACN,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QAC7B,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;QACvB,IAAI,CAAC,UAAU,GAAG,yKAAyK;QAC3L,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;QACvB,WAAW,CAAC,GAAG,EAAE;YACf,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;YACzC,IAAG,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,WAAW,GAAG,GAAG,EAAE;gBACpD,IAAI,CAAC,aAAa,IAAI,CAAC,CAAC;gBACxB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;aACvE;QACH,CAAC,EAAE,EAAE,CAAC;IACR,CAAC;CAEF;;;;;;;;;;;;;ACvBD;AAAA;AAAO,MAAM,sBAAsB;IAMjC,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAHpC,gBAAW,GAAG,IAAI,CAAC;IAGqB,CAAC;IAEzC,QAAQ;QACN,MAAM,GAAG,GAAW,2EAA2E,GAAG,IAAI,CAAC,SAAS,CAAC;QACjH,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,IAAQ,EAAE,EAAE;YACxC,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;gBACvB,OAAO,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;gBAC3C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;gBAC/B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;aAC5B;QACH,CAAC,CAAC,CAAC;IACL,CAAC;CAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0GC3BD,kLAAgG,KAC9F,uIAAiB,KACf,2MAAuK,KAEzK,wIAAkB,KAChB,yLAAgH,wDAL7F,0BAAmC,SAAC,0BAAoC,SAA/F,YAAgG,EAAzE,SAAmC,EAAC,SAAoC,GAE1E,sGAAqB,GAAE,gCAA0C,SAAC,gCAAwC,SAAC,gCAAyC,SAArK,YAAuK,EAAtJ,SAAqB,EAAE,SAA0C,EAAC,SAAwC,EAAC,SAAyC,GAGnJ,0BAAmC,SAAC,yBAAgC,SAAC,wGAAuB,GAA9G,YAAgH,EAA9F,SAAmC,EAAC,SAAgC,EAAC,SAAuB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4GCLlH,uHAAK,KACH,wtBAA4E,iDAA1D,mBAAwB,UAAC,mBAAoB,QAAC,qBAAW,EAA3E,YAA4E,EAA1D,SAAwB,EAAC,SAAoB,EAAC,SAAW;;;;;;;;;;;;;;;;ACD7E;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRnE;AAAA;AAAO,MAAM,wBAAwB;IAOnC;QAFA,eAAU,GAAG,KAAK,CAAC;IAGnB,CAAC;IAED,QAAQ;IAER,CAAC;IAED,SAAS;QACP,MAAM,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,qBAAqB,EAAE,CAAC,IAAI,CAAC;QAClE,MAAM,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC;QAChC,OAAO,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;IACvB,CAAC;CAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iHCrBK,uHAAwD,2FAAc;iHACtE,uHAAyD,gGAAmB;iHAC5E,uHAAyD,iGAAoB;iHAC7E,uHAAuD,4HAA+C;iHActG;;;;;;krBAAiF,8EAEjF,2BAFgE,kBAAgB,oBAAhF,YAAiF,EAAjB,SAAgB,2BAAhF,uxBAAiF,gEAEjF;iHAWF;;;m/BAA4D,IAC1D,gJAA0B,KAExB,q3BAAiC,IAAS,6EAE5C,2BAF0B,kBAAQ,EAAhC,YAAiC,EAAT,SAAQ,2BAHpC,0SAA4D,GAGxD,gVAAiC,GAAS,kEAE5C;iHAGF,4wCAAiE,KAC/D,uHAAI,KACF,iJAA2B,KACzB;;;+kCACkD,IAChD,08BAAsC,+EAEtC,MACO,8EAEX,MACA,wJAAmE,KACjE,8oBAAgC,0BAP9B,aAAsC,mDAL9C,wMAAiE,GAInD,+BAAyC,0BADjD,kTACkD,EAA1C,SAAyC,EADjD,+BACkD,GAChD,m1BAAsC,mIAEtC,GACO,qEAEX,GACI,+CAA8D,qBAAlE,aAAmE,EAA/D,UAA8D;iHAvD1E;;;;;;wzBAA8C,IAC5C,sHAAI,+FAAkB,MACtB,g8BAA2B,6EAAI,MAC/B,u6FAAkC,KAChC;;;;;;;;;;;;;;;;;;;;;w8FAA0H,KAC1H,4iBAAW,KACT,sZAAwD,IACxD,sZAAyD,IACzD,sZAAyD,IACzD,sZAAuD,IAE1C,uHAAK,KACtB,2IAAoB,KAAM,uHAAK,KAC/B,uHAAI,gLAAmG,MACvG,k8BAA2B,wFAAe,MAC1C,g7FAAkC,KAChC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;o7GAKe,KACf,uqCAA0C,MACxC,4dAAiF,GAArE,uLAAmD,KAKnE,uHAAK,KACL,2IAAoB,KAAM,uHAAK,KAC/B,wVAAwH,YAA3C;;wBAA0C;MAAvH,soBAAwH,mFAAU,MAClI,wHAAK,iFAAc,MAErB,8IAAsB,KACpB,g+BAAqF,MAEnF,miBAA4D,KAQ5D,ojBAAiE,kDA5C/D,mBAAuB,YAA7B,YAA8C,EAAxC,SAAuB,GAE3B,YAA2B,GACX,uBAAiB,EAAjC,aAAkC,EAAlB,UAAiB,GACxB,mBAAQ,EAAf,aAA0H,EAAnH,UAAQ,GAAoB,uBAAsB,EAAzD,aAA0H,EAAvF,UAAsB,GAAhC,uBAAS,EAAoC,oCAA+B,EAA9F,mBAAQ,EAA2C,uBAAW,EAArE,aAA0H,EAAjG,UAAS,EAAoC,UAA+B,EAA9F,UAAQ,EAA2C,UAAW,GAE9D,6JAAkD,6CAAvD,aAAwD,EAAnD,UAAkD,GAClD,6JAAmD,8CAAxD,aAAyD,EAApD,UAAmD,GACnD,6JAAmD,8CAAxD,aAAyD,EAApD,UAAmD,GACnD,6JAAiD,4CAAtD,aAAuD,EAAlD,UAAiD,GAK1D,aAA2B,GACX,uBAAiB,EAAjC,aAAkC,EAAlB,UAAiB,GAKxB,2EAAwB,GAJ/B,aAKe,EADR,WAAwB,GADxB,0BAAwB,EAH/B,aAKe,EAFR,WAAwB,GAFxB,4BAAsB,EADtB,wBAAW,EAAlB,aAKe,EAJR,WAAsB,EADtB,WAAW,GAOJ,wJAAmD,oBAA/D,aAAiF,EAArE,WAAmD,GAOzB,sBAAkC,kBAAlD,2BAAe,EAAzC,aAAwH,EAA9E,WAAkC,EAAlD,WAAe,GAI/B,qBAAyB,aAAC,qBAA2B,cAA/D,aAAqF,EAA3E,WAAyB,EAAC,WAA2B,GAUvC,qBAA0C,WAAhE,aAAiE,EAA3C,WAA0C,mDA5CpE,8sBAA8C,GAE5C,60BAA2B,GAC3B,s6EAAkC,IAChC,2sDAA0H,IAC1H,yGAAW,GASb,21BAA2B,GAC3B,s6EAAkC,IAChC,k5FAKe,IASjB,gWAAwH,GACnH,4DAAc;;;;;;;;;;;;;;;;AC9BrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+E;AAIP;AAC1B;AAEM;AAapD,MAAM,SAAS,GAAiB,EAAE,CAAC;AAO5B,MAAM,2BAA2B;IAUtC,YAAoB,IAAgB,EAAU,WAAwB,EAAU,MAAc;QAA1E,SAAI,GAAJ,IAAI,CAAY;QAAU,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAN9F,YAAO,GAAa,EAAE,CAAC;QAEvB,eAAU,GAAG,EAAE,CAAC;QAChB,gBAAW,GAAG,IAAI,mEAAiB,CAAa,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACvE,eAAU,GAAG,IAAI,8EAAuB,EAAc,CAAC;QAiFvD,aAAQ,GAAG,CAAC,CAAS,EAAE,IAAgB,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;QA9EtF,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACtC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YACpF,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;SACvF,CAAC,CAAC;QACH,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,SAAS,CAAC;QACjC,IAAI,CAAC,cAAc,EAAE;QACrB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,IAAI,CACxE,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CACtC;IACH,CAAC;IAED,QAAQ;QACN,WAAW,CAAC,GAAG,EAAE;YACf,IAAI,CAAC,cAAc,EAAE,CAAC;QACxB,CAAC,EAAE,IAAI,CAAC;QACR,MAAM,GAAG,GAAY,iEAAiE,CAAC;QACvF,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;YACzC,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC;YAC7B,OAAO,CAAC,GAAG,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YACzC,IAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;gBACtB,MAAM,KAAK,GAAsB,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;oBACvD,OAAO,EAAC,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,QAAQ,EAAE,EAAE,EAAC,CAAC;gBAC9D,CAAC,CAAC,CAAC;gBACH,KAAK,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,EAAE,EAAC,CAAC,CAAC;gBACnD,MAAM,MAAM,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;gBAChC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;oBAChB,IAAI,WAAW,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC;oBAC3D,MAAM,OAAO,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;oBACvD,IAAG,WAAW,IAAI,CAAC,CAAC,EAAE;wBACpB,KAAK,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,EAAE,EAAC,CAAC;wBACvD,WAAW,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;wBAC/B,KAAK,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;qBAC1C;oBACD,IAAG,OAAO,IAAI,WAAW,EAAE;wBACzB,KAAK,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;qBAC3C;gBACH,CAAC,CAAC;gBACF,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACnB,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAE,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC,EAAC,CAAC,CAAC;gBACzI,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;aACnC;QACH,CAAC,CAAC;IACJ,CAAC;IAED,cAAc;QACZ,MAAM,GAAG,GAAY,8DAA8D,CAAC;QACpF,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;YACzC,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC;YAC7B,OAAO,CAAC,GAAG,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YACzC,IAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;gBACtB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;aAChC;QACH,CAAC,CAAC;IACJ,CAAC;IAED,WAAW,CAAC,IAAY;QACtB,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACtB,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;IACxF,CAAC;IAED,MAAM,CAAC,IAAY,EAAE,MAAc;QACjC,MAAM,GAAG,GAAY,sEAAsE,GAAG,IAAI,CAAC,WAAW,EAAE,GAAG,UAAU,GAAG,MAAM,CAAC,WAAW,EAAE,CAAC;QACrJ,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;YACzC,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC;YAC7B,OAAO,CAAC,GAAG,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YACzC,IAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;gBACtB,IAAI,CAAC,UAAU,GAAG,IAAI,GAAG,yBAAyB,CAAC;aACpD;iBAAM;gBACL,IAAI,CAAC,UAAU,GAAG,wCAAwC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;aAC7E;QACH,CAAC,CAAC;IACJ,CAAC;IAED,GAAG,CAAC,CAAU,EAAE,KAAuB;QACrC,OAAO,EAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAC;IACxF,CAAC;CAGF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mGCrHC,mnBAA2C;mGAE3C,6hBAAoE,iDAAzD,mBAA0B,WAArC,YAAoE,EAAzD,SAA0B;mGAHvC,qIAAe,KACb,sYAA2C,IAE3C,sYAAoE,iDAFxD,sCAA8B,GAA1C,YAA2C,EAA/B,SAA8B,GAEJ,qCAA6B,GAAnE,YAAoE,EAA9B,SAA6B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oGCMzD,4nBAE4B,yBAD1B,kBAAwB,oCAAC,kBAAwB,oCAAC,kBAAsC,2CAD1F,YAE4B,EAD1B,SAAwB,EAAC,SAAwB,EAAC,SAAsC;oGAG1F,27BAAoE,6EAAI,2BAAxE,82BAAoE;oGACpE,27BAAyF,sFACzF,2BADA,82BAAyF;oGAEzF,27BAAqE,gFAAO,2BAA5E,82BAAqE;oGAEvE,kkBAAmG,GAArC,iEAAoC,2BAA7F,wBAAc,EAA2C,gCAAoC,qCAAlG,YAAmG,EAA9F,SAAc,EAA2C,SAAoC,2BAA9E,kBAAmB,gCAAvC,YAAmG,EAA/E,SAAmB;oGAbzC,gNAE8D,KAC5D,+IAAyB,KACvB,uYAE4B,IAE5B,uYAAoE,IACpE,uYAAyF,IAEzF,uYAAqE,IAEvE,wYAAmG,kFAErG,2BATM,oBAAyB,6BAF3B,YAE4B,EAA1B,SAAyB,GAEjB,wDAAwC,0BAAlD,YAAoE,EAA1D,SAAwC,GACxC,+FAA6D,0BAAvE,YAAyF,EAA/E,SAA6D,GAE7D,yDAAyC,0BAAnD,YAAqE,EAA3D,SAAyC,GAEb,oBAAqB,yBAA7D,aAAmG,EAA3D,SAAqB,mDAZ1D,qFAAyE,WACzE,kDAAwD,UAF7D,YAE8D,EADzD,SAAyE,EACzE,SAAwD,GAWwC,mEAErG;oGAjBF,uHAA2C,KACzC,uHAAK,2HAAI,gFAAiB,MAC1B,gdAE8D,yBAFzD,kBAAuD,0BAA5D,YAE8D,EAFzD,SAAuD,2BADnD,mEAAiB;oGAJlC,wIAAkB,KAChB,sIAAgB,KACd,+IAAyB,KACvB,gdAA2C,iDAAtC,mBAAqC,WAA1C,YAA2C,EAAtC,SAAqC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qGCHhD,8IAAuB,KACrB,wtBAA4E,IAC5E,uHAAK,wFAEL,MACA,uHAAK,yFAEL,MACA,uHAAK,uFAEL,MACA,uHAAK,KACH,wVAAyG,YAA5B;;wBAA2B;MAAxG,soBAAyG,uFAAc,mDAXvG,mBAAwB,UAAC,mBAAoB,QAAC,qBAAW,EAA3E,YAA4E,EAA1D,SAAwB,EAAC,SAAoB,EAAC,SAAW,GAW/B,mBAAkC,mBAAlD,0BAAe,EAAzC,aAAyG,EAA/D,SAAkC,EAAlD,UAAe,mDAVtC,0DAEL,GACK,oDAEL,GACK,kDAEL,GAEE,oVAAyG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJ7G;AAAA;AAAA;AAAA;AAAO,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,OAAO,CAAC;IAClB,CAAC;CAAA;AAED,SAAS,SAAS;IAChB,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,aAAa,CAAC,CAAC;IACzD,OAAO,MAAM,CAAC;AAChB,CAAC;AAEM,SAAS,WAAW;IACzB;;;;;OAKG;IACH,OAAO,YAAY,CAAC;AACtB,CAAC;AAEM,SAAS,WAAW;IACzB;;;;;OAKG;IACH,OAAO,YAAY;AACrB,CAAC;;;;;;;;;;;;;AClCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;AAIF;AACJ;AACY;AACxC;AAC2B;AAwC/C,MAAM,cAAc;IAkCzB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAhCpC,WAAM,GAAG,CAAC,CAAC;QAGX,YAAO,GAAG,KAAK,CAAC;QAChB,UAAK,GAAG,CAAC,CAAC;QACV,uBAAkB,GAAG,KAAK,CAAC;QAC3B,qBAAgB,GAAG,KAAK,CAAC;QAgBzB,UAAK,GAAG,IAAI,CAAC;QACb,aAAQ,GAAG,CAAC,CAAC;QAGb,WAAM,GAAG,CAAC,CAAC,CAAC;QAEZ,yBAAoB,GAAG,CAAC,CAAC;QACzB,qBAAgB,GAAG,CAAC,CAAC,CAAC;IAItB,CAAC;IAED,QAAQ;QACN,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;QACjC,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,eAAe,GAAG,IAAI,wDAAS,CAAC,EAAE,CAAC,CAAC;QACzC,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAC1B,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;QAC9B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,aAAa,GAAG,IAAI,GAAG,EAAgB,CAAC;QAC7C,IAAI,CAAC,YAAY,GAAG,IAAI,GAAG,EAAmB,CAAC;QAC/C,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,WAAW,GAAG,IAAI,4CAAO,EAAU,CAAC;QACzC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,mEAAY,CAAC,IAAI,CAAC,EAAE,gEAAS,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,iEAAU,CAAC,GAAG,EAAE,CAAC,kDAAK,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE;YACnI,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,WAAW,CAAC,GAAG,EAAE;YACf,IAAI,CAAC,aAAa,EAAE,CAAC;QACvB,CAAC,EAAE,IAAI,CAAC,CAAC;QACT,MAAM,OAAO,GAAW,kEAAW,EAAE,GAAG,QAAQ,CAAC;QACjD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,CAAC,IAAY,EAAE,EAAE;YAChD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QACpB,CAAC,CAAC,CAAC;QACH,MAAM,iBAAiB,GAAW,kEAAW,EAAE,GAAG,mBAAmB,CAAC;QACtE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,SAAS,CAAC,CAAC,IAA8C,EAAE,EAAE;YAC5F,OAAO,CAAC,GAAG,CAAC,oBAAoB,GAAG,IAAI,CAAC,CAAC;YACzC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,IAAI,CAAC;QACnC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IACxB,CAAC;IAED,OAAO,CAAC,IAAU;QAChB,IAAI,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;YAChC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;SAChE;aAAM;YACL,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;SACjC;QACD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,qBAAqB,EAAE,CAAC;IACjD,CAAC;IAED,UAAU,CAAC,IAAU;QACnB,IAAI,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;YAChC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;YAC/D,IAAI,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;gBACrC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;aACjC;SACF;QACD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,qBAAqB,EAAE,CAAC;IACjD,CAAC;IAED,qBAAqB;QACnB,MAAM,IAAI,GAAG,EAAE,CAAC;QAChB,KAAK,MAAM,GAAG,IAAI,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,EAAE;YAC3C,IAAI,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,GAAG,CAAC,EAAC,CAAC,CAAC;SAC5D;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,aAAa;QAkBX,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;QAC9B,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE;YAC5B,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;YAC/B,MAAM,GAAG,GAAW,kEAAW,EAAE,GAAG,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC;YAC/D,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;YACjC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,IAAoB,EAAE,EAAE;;gBACpD,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;gBAC7B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBAClB,IAAI,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;oBAC/B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;oBACnC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC;oBAC5C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;oBACxC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC;oBACtC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;oBAC9C,IAAI,IAAI,CAAC,OAAO,EAAE;wBAChB,IAAI,IAAI,CAAC,gBAAgB,KAAK,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;4BACjF,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;gCACnD,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,KAAK,KAAK,CAAC,IAAI,CAAC,CAAC;gCACtE,OAAO;oCACL,IAAI,EAAE,WAAW;oCACjB,MAAM,EAAE,KAAK,CAAC,MAAM;iCACrB,CAAC;4BACJ,CAAC,CAAC,CAAC;4BACH,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC;4BACnC,0BAA0B;yBAC3B;wBACD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;wBACvC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;wBAC7F,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC;wBACzC,IAAI,CAAC,MAAM,SAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,WAAW,CAAC,0CAAE,MAAM,CAAC;wBACnF,IAAI,CAAC,OAAO,SAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,WAAW,CAAC,0CAAE,KAAK,CAAC;wBACnF,IAAI,CAAC,iBAAiB,SAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,WAAW,CAAC,0CAAE,MAAM,CAAC;wBAC9F,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;4BAC1B,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;gCAChC,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;oCACxB,MAAM,SAAS,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;oCACjD,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;wCAC7C,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,SAAS,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC,CAAC,CAAC;qCACjE;gCACH,CAAC,CAAC,CAAC;4BACL,CAAC,CAAC,CAAC;4BACH,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;yBAC5C;6BAAM;4BACL,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;yBAC1B;wBACD;;;;;;;;2BAQG;qBACJ;yBAAM;wBACL,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;qBACvB;iBACF;gBACD,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;YAClC,CAAC,CAAC,CAAC;SACJ;QACD,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IACtG,CAAC;IAED,+BAA+B,CAAC,IAAY;;QAC1C,aAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,0CAAE,EAAE,CAAC;IAC9D,CAAC;IAED,gBAAgB,CAAC,MAAc;QAC7B,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,KAAK,MAAM,CAAC,CAAC;IACrD,CAAC;IAED,iBAAiB;QACf,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,MAAM,eAAe,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE;gBACjF,MAAM,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;gBACzD,OAAO;oBACL,IAAI,EAAE,SAAS,CAAC,IAAI;oBACpB,IAAI,EAAE,CAAC;oBACP,IAAI,EAAE,SAAS,CAAC,MAAM;oBACtB,QAAQ,EAAE,KAAK;oBACf,QAAQ,EAAE,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,IAAI;oBACxB,QAAQ,EAAE,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,IAAI;oBACxB,eAAe,EAAE,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW;iBACvC,CAAC;YACJ,CAAC,CAAC,CAAC;YACH,MAAM,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;gBAC5E,MAAM,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACpD,OAAO;oBACL,IAAI,EAAE,IAAI,CAAC,IAAI;oBACf,IAAI,EAAE,CAAC;oBACP,IAAI,EAAE,IAAI,CAAC,MAAM;oBACjB,QAAQ,EAAE,IAAI;oBACd,QAAQ,EAAE,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,IAAI;oBACxB,QAAQ,EAAE,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,IAAI;oBACxB,eAAe,EAAE,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW;iBACvC,CAAC;YACJ,CAAC,CAAC,CAAC;YACH,MAAM,UAAU,GAAiB;gBAC/B,KAAK,EAAE,SAAS;gBAChB,KAAK,EAAE,eAAe;aACvB,CAAC;YACF,MAAM,SAAS,GAAiB;gBAC9B,KAAK,EAAE,WAAW;gBAClB,KAAK,EAAE,cAAc;aACtB,CAAC;YACF,IAAI,CAAC,aAAa,GAAG,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC;SAC9C;aAAM,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE;YACzB,IAAI,CAAC,aAAa,GAAG,CAAC;oBACpB,KAAK,EAAE,SAAS;oBAChB,KAAK,EACH,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;wBACxB,MAAM,IAAI,GAAc;4BACtB,IAAI,EAAE,MAAM,CAAC,IAAI;4BACjB,IAAI,EAAE,MAAM,CAAC,IAAI;4BACjB,IAAI,EAAE,IAAI;4BACV,QAAQ,EAAE,KAAK;4BACf,QAAQ,EAAE,IAAI;4BACd,QAAQ,EAAE,IAAI;4BACd,eAAe,EAAE,IAAI;yBACtB,CAAC;wBACF,OAAO,IAAI,CAAC;oBACd,CAAC,CAAC;iBACL,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;SACzB;IACH,CAAC;IAED,WAAW;QACT,IAAI,CAAC,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,OAAO,EAAE;YACtC,OAAO,IAAI,CAAC,WAAW,CAAC;SACzB;aAAM;YACL,OAAO,IAAI,CAAC,QAAQ,CAAC;SACtB;IACH,CAAC;IAED,aAAa;QACX,IAAI,CAAC,CAAC,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,OAAO,EAAE;YAC5C,OAAO,IAAI,CAAC,iBAAiB,CAAC;SAC/B;aAAM;YACL,OAAO,EAAE,CAAC;SACX;IACH,CAAC;IAED,SAAS;QACP,IAAI,GAAG,GAAW,kEAAW,EAAE,GAAG,eAAe,GAAG,IAAI,CAAC,oBAAoB,CAAC;QAC9E,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YACxB,IAAI,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAC7C,SAAS,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YACxC,GAAG,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,SAAS,CAAC;QAC3C,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,IAAQ,EAAE,EAAE;QAC1C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,YAAY;QACV,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,KAAK,MAAM,SAAS,IAAI,IAAI,CAAC,UAAU,EAAE;YACvC,KAAK,IAAI,SAAS,CAAC,KAAK,CAAC;SAC1B;QACD,OAAO,KAAK,KAAK,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;IACvC,CAAC;IAED,WAAW,CAAC,QAAgB,EAAE,WAAmB;QAC/C,MAAM,GAAG,GAAW,kEAAW,EAAE,GAAG,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,GAAG,GAAG,WAAW,GAAG,GAAG,GAAG,QAAQ,CAAC;QAClG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,IAAQ,EAAE,EAAE;YACxC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iBAAiB,CAAC,KAAgB;QAChC,MAAM,WAAW,GAAG,KAAK,CAAC,SAAS,CAAC;QACpC,MAAM,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC;QAChF,IAAG,QAAQ,CAAC,MAAM,IAAI,CAAC,EAAE;YACvB,MAAM,GAAG,GAAW,kEAAW,EAAE,GAAG,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,GAAG,GAAG,WAAW,GAAG,GAAG,GAAG,QAAQ,CAAC;YAClG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,IAAQ,EAAE,EAAE;gBACxC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;YAC3B,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,UAAU,CAAC,IAAY;QACrB,MAAM,GAAG,GAAW,kEAAW,EAAE,GAAG,OAAO,CAAC;QAC5C,MAAM,IAAI,GAAG,EAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAC,CAAC;QACzC,MAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;aACnC,CAAC;SACH,CAAC;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;IAChD,CAAC;IAED,kBAAkB,CAAC,KAAgB;QACjC,OAAO,qBAAqB,GAAG,KAAK,CAAC,SAAS,CAAC;IACjD,CAAC;IAED,oBAAoB,CAAC,KAAa,EAAE,IAAmB;QACrD,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;IAClC,CAAC;IAED,gBAAgB,CAAC,KAAa,EAAE,IAAe;QAC7C,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mGCtWiB,wHAAkC,KAChC,oJAA6C,gCAA1B,kBAAyB,iCAA5C,YAA6C,EAA1B,SAAyB;mGAE9C,wHAAmC,0LAAoB;mGAJzD,wHAA+C,KAC7C,sYAAkC,IAGlC,sYAAmC,yBAH7B,kBAA2B,4BAAjC,YAAkC,EAA5B,SAA2B,GAG3B,mBAA4B,4BAAlC,YAAmC,EAA7B,SAA4B;mGAV5C,sHAA0C,KACxC,uJAAiC,iKAAkD,KACnF,sHAAI,KACF,iKAA8D,KAC5D,0IAAoB,gFAAkB,MACtC,+IAAyB,KACvB,+cAA+C,yBAAzC,kBAAwC,yBAA9C,YAA+C,EAAzC,SAAwC,2BALd,kBAAsB,2BAA3B,YAAkD,EAA7C,SAAsB,GAErD,gDAAiC,GAAtC,YAA8D,EAAzD,SAAiC,GAChB,oEAAkB;mGAkB5C;;;;;wBAAkI;MAAnC;;wBAAkC;MAAjI,4qBAAkI,IAChI,iJAAoD,8EACtD,mDAFsD,8CAAwC,qBAA9F,YAAkI,EAA5E,SAAwC,mDAA9F,uxBAAkI,GAC7G,mCAAgC,qBAAnD,YAAoD,EAAjC,SAAgC,GAAC,+DACtD;qWA5BR,uJAAgC,KAC9B,gJAAyB,KACvB,iLAAgD,KAC9C,sKAAqC,KACnC,+cAA0C,IAkB9C,46FAAqD,KACnD,uSAAW,2FAAe,MAC1B;;;;;;;;;;;;;;;;;;;;wBAA4F;MAAhE;;wBAA2B;MAAvD,kmEAA4F,KAC5F,uqCAA0C,MACxC,6cAAkI,iDAtB9H,mBAAqC,WAAzC,YAA0C,EAAtC,SAAqC,GAkBV,uBAAiB,EAApD,aAAqD,EAAlB,UAAiB,GAEM,0EAAwB,GAAhF,aAA4F,EAApC,UAAwB,GAAhE,uBAAW,EAA3B,aAA4F,EAA5E,UAAW,GAEb,oBAAyC,iBAArD,aAAkI,EAAtH,UAAyC,2BAJzD,m5EAAqD,IAEnD,iqEAA4F;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oGClB5F,uHAAwD,2FAAc;oGACtE,uHAAyD,gGAAmB;oGAC5E,uHAAyD,iGAAoB;oGAC7E,uHAAuD,4HAA+C;oGAYtG,wHAAyD,2FAAc;oGArB7E;;;;;;kzBAA8C,IAC5C,sHAAI,2FAAc,MAClB,27BAA2B,6EAAI,MAC/B,g6FAAkC,KAChC;;;;;;;;;;;;;;;;;;;;;k7FAAiH,KACjH,yiBAAW,KACT,yYAAwD,IACxD,yYAAyD,IACzD,yYAAyD,IACzD,yYAAuD,IAE1C,uHAAK,KACtB,2IAAoB,KAAM,uHAAK,KAC/B,67BAA2B,wFAAe,MAC1C,y6FAAkC,KAChC,ySAAW,4FAAgB,MAC3B;;;;;;;;wBAAiE;MAArD;;wBAAoB;MAAhC,wvGAAiE,KAC/D;;;;;;qrBAA2B,sFAAa,MACxC;;;;;;qrBAA0B,8EAAK,MAEjC,yiBAAW,KACT,yYAAyD,IAG3D,uHAAK,KACP,2IAAoB,KAAM,uHAAK,KAC/B,wVAA+E,YAArC;;wBAAoC;MAA9E,gnBAA+E,6EAAI,mDA1B/E,mBAAuB,YAA7B,YAA8C,EAAxC,SAAuB,GAE3B,YAA2B,GACX,uBAAiB,EAAjC,aAAkC,EAAlB,UAAiB,GACxB,mBAAQ,EAAf,aAAiH,EAA1G,UAAQ,GAAoB,uBAAsB,EAAzD,aAAiH,EAA9E,UAAsB,GAAhC,uBAAS,EAAoC,2BAAsB,EAArF,mBAAQ,EAA2C,uBAAW,EAArE,aAAiH,EAAxF,UAAS,EAAoC,UAAsB,EAArF,UAAQ,EAA2C,UAAW,GAE9D,6JAAkD,6CAAvD,aAAwD,EAAnD,UAAkD,GAClD,6JAAmD,8CAAxD,aAAyD,EAApD,UAAmD,GACnD,6JAAmD,8CAAxD,aAAyD,EAApD,UAAmD,GACnD,6JAAiD,4CAAtD,aAAuD,EAAlD,UAAiD,GAI1D,aAA2B,GACX,uBAAiB,EAAjC,aAAkC,EAAlB,UAAiB,GAEE,oBAAQ,EAAzC,aAAiE,EAAhC,WAAQ,GAAC,wBAAsB,EAAhE,aAAiE,EAAvB,WAAsB,GAA/B,oBAAQ,EAA7B,qBAAoB,WAAhC,aAAiE,EAAhC,WAAQ,EAA7B,WAAoB,GAClB,0BAAc,EAA1B,aAA2B,EAAf,WAAc,GACd,yBAAa,EAAzB,aAA0B,EAAd,WAAa,GAGnB,8JAAkD,6CAAxD,aAAyD,EAAnD,WAAkD,GAKlC,2BAAe,EAAzC,aAA+E,EAArD,WAAe,2BA1B3C,8sBAA8C,GAE5C,60BAA2B,GAC3B,s6EAAkC,IAChC,2sDAAiH,IACjH,yGAAW,GAQb,21BAA2B,GAC3B,s6EAAkC,IAEhC,u8EAAiE,IAC/D,g0BAA2B,GAC3B,g0BAA0B,GAE5B,2GAAW,GAMb,gWAA+E;;;;;;;;;;;;;;;;ACZjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AAOqB;AACC;AACuB;AAI9C;AAGtD,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,iBAAiB,EAAE,SAAS,EAAE,gHAA2B,EAAE;IACnE,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qEAAc,EAAE;IAC5C,EAAE,IAAI,EAAE,sBAAsB,EAAE,SAAS,EAAE,kEAAa,EAAE;IAC1D,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,wFAAmB,EAAE;IACnD,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,yFAAoB,EAAE;IACzD,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,EAAE;CACtD,CAAC;AAuCK,MAAM,SAAS;CAErB;;;;;;;;;;;;;AC1ED;AAAA;AAAA,6DAA6D;AAC7D,sDAAsD;AAO/C,MAAM,eAAe;IAO1B,YAAoB,IAAgB,EAAU,cAA+B;QAAzD,SAAI,GAAJ,IAAI,CAAY;QAAU,mBAAc,GAAd,cAAc,CAAiB;QAD7E,qBAAgB,GAAG,KAAK,CAAC;IACwD,CAAC;IAElF,QAAQ;QACN,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAClE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAC9D,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,WAAW,CAAC,GAAG,EAAE;YACf,IAAI,CAAC,cAAc,EAAE,CAAC;QACxB,CAAC,EAAE,IAAI,CAAC;IACV,CAAC;IAED,cAAc;QAEZ,MAAM,GAAG,GAAY,qEAAqE,GAAG,IAAI,CAAC,IAAI,GAAG,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC;QAC9H,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;YACzC,IAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;gBACtB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;gBAClC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;gBAC/B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;aAC5B;QACH,CAAC,CAAC;IACJ,CAAC;IAED,UAAU;QACR,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC7B,MAAM,GAAG,GAAY,yEAAyE,CAAC;QAC/F,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;YACzC,IAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;gBACtB,OAAO,CAAC,GAAG,CAAC,gCAAgC,CAAC,CAAC;aAC/C;YACD,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAChC,CAAC,CAAC;IACJ,CAAC;CAEF;;;;;;;;;;;;;AC7CD;AAAA;AAAO,MAAM,mBAAmB;IAE9B,YAAoB,IAAiB;QAAjB,SAAI,GAAJ,IAAI,CAAa;IAAI,CAAC;IAE1C,QAAQ;QACN,MAAM,GAAG,GAAW,kEAAkE,CAAC;QACvF,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,IAAQ,EAAE,EAAE;YACxC,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC;YAC7B,OAAO,CAAC,GAAG,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YACzC,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;gBACvB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;aACjC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;CAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACED;AAAA;AAAO,MAAM,cAAc;IAGzB,gBAAgB,CAAC;IAEjB,QAAQ;IAER,CAAC;CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;yGChCD,sJAA4E,KAC1E,sHAAI,gFAAa,MACjB,6nBAA+C,yBAA1B,gHAAyB,GAA9C,YAA+C,EAA1B,SAAyB,2BAD1C,6DAAa;yGAFnB,+IAAyB,KACzB,qdAA4E,iDAAvE,mBAAyC,aAA9C,YAA4E,EAAvE,SAAyC;;;;;;;;;;;;;;;;ACE9C;AAAA;AAAA;AAA6C;AAYtC,MAAM,aAAa;IAMxB,YAAoB,IAAgB,EAAU,cAA+B;QAAzD,SAAI,GAAJ,IAAI,CAAY;QAAU,mBAAc,GAAd,cAAc,CAAiB;IAAI,CAAC;IAElF,QAAQ;QACN,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACtE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAC9D;;;kBAGU;IACZ,CAAC;IAED,cAAc;QAEZ,MAAM,GAAG,GAAY,kEAAW,EAAE,GAAG,oBAAoB,GAAG,IAAI,CAAC,QAAQ,GAAG,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC;QAEjG,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG,GAAG,CAAC,CAAC;QACpC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;YACzC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;gBACtB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;oBACzC,IAAI,CAAC,GAAY,EAAC,IAAI,EAAE,KAAK,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,KAAK,CAAC,MAAM,CAAC,EAAC,CAAC;oBAC5D,OAAO,CAAC,CAAC;gBACX,CAAC,CAAC;aACH;QACH,CAAC,CAAC;IACJ,CAAC;CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8GC1CG,uKAAqF,KACnF,sHAAI,KACF,6JAA8C,iFAChD,MAAK,6EAEP,yDALkD,mBAAkC,cAApF,YAAqF,EAAnC,SAAkC,GAEpD,mBAAiB,OAA7C,YAA8C,EAAlB,SAAiB,GAAC,+FAChD,GAAK,wDAEP;8GANF,sJAAuD,KACrD,iZAAqF,iDAAhF,mBAAuB,aAA5B,YAAqF,EAAhF,SAAuB;gMALhC,0NAE8C,YAFxC;;wBAAqC;MACrC;;wBAAqC;MACrC;;wBAAuC;MAF7C,wBAE8C,KAC5C,iLAAuD,KACvD,iZAAuD,yBAAlD,0EAAsB,GAA3B,YAAuD,EAAlD,SAAsB,mDADC,mBAAiB,OAA7C,YAAuD,EAA3B,SAAiB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACO/C;AAAA;AAAO,MAAM,oBAAoB;IAW/B,YAAoB,IAAgB,EAAU,cAA8B;QAAxD,SAAI,GAAJ,IAAI,CAAY;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAN5E,aAAQ,GAAW,EAAE,CAAC;QACtB,WAAM,GAAW,EAAE,CAAC;QAGpB,gBAAW,GAAY,IAAI,CAAC;IAG5B,CAAC;IAED,QAAQ;QACN,mEAAmE;QACnE,+DAA+D;QAC/D,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IACpD,CAAC;IAED,WAAW,CAAC,OAAsB;QAChC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IACpD,CAAC;IAED,kBAAkB,CAAC,OAAe,EAAE,KAAa;QAC/C,IAAG,OAAO,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,EAAE;YACnC,OAAO;SACR;QACD,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;QACtC,MAAM,GAAG,GAAW,uEAAuE,GAAG,OAAO,GAAG,OAAO,GAAG,KAAK,CAAC;QACxH,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,IAAQ,EAAE,EAAE;YACxC,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC;YAC7B,OAAO,CAAC,GAAG,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YACzC,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;gBACvB,OAAO,CAAC,GAAG,CAAC,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;gBAC9C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;gBACjC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAC7B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;gBAC3B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;gBAC3B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;gBAC3B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACxB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACzB;QACH,CAAC,CAAC;IACJ,CAAC;CAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oGCrDK,4nBAIwC,yBAFtC,kBAAuB,qCACvB,kBAAuB,qCACvB,kBAAqC,4CAJvC,YAIwC,EAFtC,SAAuB,EACvB,SAAuB,EACvB,SAAqC;oGALzC,oJAAoE,KAClE,uYAIwC,IAChB,6EAE1B,2BANI,oBAAmB,yBADrB,YAIwC,EAHtC,SAAmB,2BAIG,oEAE1B;oGAeM,qMAAwF,YAA7D;;wBAA4B;MAAvD,wBAAwF,KACtF,4nBAEwD,yBAFjC,kBAAkB,yBAClB,kBAAkB,yBAClB,kBAAgC,gCAFvD,YAEwD,EAFjC,SAAkB,EAClB,SAAkB,EAClB,SAAgC;oGAKzD,wMAC8C,YAAzC;;wBAAwC;MAD7C,wBAC8C,KAC5C,4nBAEiE,IACzC,6EAE1B,2BALyB,kBAA2B,8BAC3B,kBAA2B,8BAC3B,kBAAyC,qCAFhE,YAEiE,EAF1C,SAA2B,EAC3B,SAA2B,EAC3B,SAAyC,2BACxC,mEAE1B;oGAKE;;;;;;krBAEyB,8EAEzB,2BAFE,kBAAsB,uBAFxB,YAEyB,EAAvB,SAAsB,2BAFxB,uxBAEyB,qEAEzB;oGA1BN,+IAA0D,KACxD,uHAAK,KACH,gdAAwF,IAO1F,uHAAK,KACH,gdAC8C,IAQhD,y6FAAoD,KAClD,uSAAW,yFAAa,MACxB;;;;;;;;wBAAkD;MAAtC;;wBAAqC;MAAjD,69DAAkD,KAChD,8cAEyB,IAK7B,+XAImC,YAA3B;;wBAA0B;MAJlC,snBAImC,oFACnC,mDAhC0D,mBAA+B,QAAvF,YAAwF,EAAhC,SAA+B,GAQzD,mBAAwC,aAAtE,YAC8C,EADhB,SAAwC,GASxD,uBAAiB,EAAjC,YAAoD,EAApC,UAAiB,GAEnB,oBAAqC,uBAAjD,aAAkD,EAAtC,UAAqC,GAE7C,oBAA8C,kBADhD,aAEyB,EADvB,UAA8C,GAS5C,qBAAiC,iBAHzC,aAImC,EAD3B,UAAiC,mDAbzC,+3EAAoD,IAElD,omDAAkD,IAS5C,oBAA6C,iBAC7C,qBAAsD,iBAF9D,sTAImC,EAH3B,UAA6C,EAC7C,UAAsD,EAF9D,kCAImC;oGAGrC,sHAAyB,6PAAkD;oGAC3E,6IAA0D,KACxD,yHAAO,yFAAY,MACnB,i4FAAsC,KACpC,ySAAW,6GAAiC,MAC5C;;;;;;;;wBAAmG;MAAzF;;wBAA2C;MAArD,g/BAAmG,0BAApC,kCAA6B,EAA5F,aAAmG,EAApC,UAA6B,2BAF9F,23EAAsC,IAEpC,m4BAAmG;qGAS/F,sHAAwC,KACtC,sHAAI,mFAEJ,MACA,sHAAI,kFAEJ,iCALI,kEAEJ,GACI,kEAEJ;qGAMF,0SAA2C,kGAAsB;qGAO/D;;;;;wBAGoD;MAAlD;;wBAAiD;MAHnD,4qBAGoD,8EAEpD,2BAHE,kBAAc,oBAFhB,YAGoD,EADlD,SAAc,2BAFhB,uxBAGoD,gEAEpD;qGAXF;;;;;;;;;4uFAA+F,KAC7F;;;;;wBAEwD;MAAtD;;wBAAqD;MAFvD,6qBAEwD,iFAExD,MACA,+cAGoD,iDAT1C,0CAAkD,4BAA9D,YAA+F,EAAnF,UAAkD,GAA9D,YAA+F,GAE3F,yBAAkB,EADpB,aAEwD,EADtD,UAAkB,GAKlB,oBAA6C,sBAD/C,aAGoD,EAFlD,UAA6C,2BAPjD,+wEAA+F,IAC7F,gzBAEwD;qGAU5D,0SAAyC,0GAA8B;qGACrE;;;;;;;;;;;;;;;;;;;;wBAAqJ;MAAzH;;wBAAuC;MAAnE,85EAAqJ,kDAAjF,0CAAkD,4BAAtH,YAAqJ,EAAjF,UAAkD,GAAtG,uBAAW,EAA3B,YAAqJ,EAArI,UAAW,2BAA3B,sjDAAqJ;qGAjBzJ,i7FACkF,MAC9E,sYAA2C,IAC3C,sYAA+F,IAajG,sYAAyC,IACvC,sYAAqJ,yBAjBzI,uBAAiB,EAAjC,YACkF,EADlE,UAAiB,GAElB,wDAA+B,GAA1C,aAA2C,EAAhC,UAA+B,GACqB,wDAA+B,GAA9F,aAA+F,EAAhC,UAA+B,GAarF,sDAA6B,GAAxC,aAAyC,EAA9B,UAA6B,GACiF,sDAA6B,GAApJ,aAAqJ,EAA9B,UAA6B,2BAjBxJ,23EACkF;qGAhBpF,+JACkF,KAChF,sHAAI,gFAAmB,MACvB,uHAAK,KACH,yHAAO,KACL,idAAwC,IAU5C,ofACkF,iDAX1E,kBAAmC,yBAAvC,YAAwC,EAApC,SAAmC,GAW3B,gEAAiE,mBADjF,YACkF,EAAlE,oBAAiE,2BAd7E,mEAAmB;oGAH3B;;;;;;gpBAA6E,IAC3E,ofACkF,iDAF1C,mBAAkC,kBAA5E,YAA6E,EAAnC,SAAkC,GAErE,uDAA4E,uBADjF,YACkF,EAA7E,oBAA4E,2BAFnF,8sBAA6E;oGAnEnF,0IAAmB,KACjB,gJAA0B,KACxB,gdAAoE,IAUtE,+IAAwB,KACtB,wfAAyE,IACzE,isBAMyG,IAEzG,iJAA2B,KACzB,wYAA0D,IAoC1D,wYAAyB,IACzB,wYAA0D,IAO1D,wYAA6E,iDAjEjD,mBAAqC,cAAnE,YAAoE,EAAtC,SAAqC,GAWxD,mBAA+B,gBAAC,mBAA6B,gBAAxE,YAAyE,EAA9D,SAA+B,EAAC,SAA6B,GAC9D,mBAAoB,QAKpB,oCAAwC,WAJxC,mBAA0B,WAC1B,mBAAsB,SAEtB,mBAAwC,kBADxC,mBAAoC,gBAGpC,kGAA8F,KANxG,YAMyG,EAN/F,SAAoB,EAKpB,SAAwC,EAJxC,SAA0B,EAC1B,SAAsB,EAEtB,SAAwC,EADxC,SAAoC,EAGpC,SAA8F,GAGjG,qCAAiC,YAAtC,aAA0D,EAArD,UAAiC,GAoClC,oBAAoB,UAAxB,aAAyB,EAArB,UAAoB,GACnB,qCAAmC,SAAxC,aAA0D,EAArD,UAAmC,GAOnC,oCAAoC,WAAzC,aAA6E,EAAxE,UAAoC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0GCnE/C,4IAAqD,mRAErD;iMAFA,sdAAqD,GAA/B,uDAA8B,IAGpD,+IAAyB,KACvB,yKAAwC,kFAExC,2BANoB,wCAA8B,GAApD,YAAqD,EAA/B,SAA8B,mDAIV,iIAExC;;;;;;;;;;;;;;;;ACKF;AAAA;AAAA;AAAA;AAAkE;AAErB;AAQtC,MAAM,cAAc;IAGzB,YAAoB,IAAgB,EAAU,WAAwB,EAAU,MAAc;QAA1E,SAAI,GAAJ,IAAI,CAAY;QAAU,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAD9F,aAAQ,GAAG,QAAQ,CAAC;QAElB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACtC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,yDAAU,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,CAAC;YAC1H,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAChC,CAAC,CAAC;IACL,CAAC;IAED,IAAI,CAAC,IAAY,EAAE,IAAY;QAC7B,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QAC1B,MAAM,GAAG,GAAY,kEAAW,EAAE,GAAG,GAAG,GAAG,IAAI,GAAG,QAAQ,GAAG,IAAI,GAAG,SAAS,CAAC;QAC9E,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;YACzC,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC;YAC7B,OAAO,CAAC,GAAG,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YACzC,IAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;gBACtB,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;gBAC1B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;aAC9C;QACH,CAAC,CAAC;QACF,OAAO,CAAC,GAAG,CAAC,IAAI,GAAG,mBAAmB,GAAG,IAAI,CAAC,CAAC;IACjD,CAAC;IAED,QAAQ;IACR,CAAC;CAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kGChDD,2IAAqB,KACnB,2IAAqB,KACrB,8lBAAe;;;;;;;;;;;;;;;;ACFjB;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,uBAAgB,CAAC,6EAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import {\r\n  Component,\r\n  ElementRef,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  QueryList,\r\n  SimpleChanges,\r\n  ViewChild,\r\n  ViewChildren\r\n} from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {getMafiaURL} from '../app.component';\r\nimport {Subject} from 'rxjs';\r\n\r\ninterface ChatData {\r\n  sender: string;\r\n  avatar: string;\r\n  message: string;\r\n  type: number;\r\n  phase: number;\r\n}\r\n\r\ninterface ChatMessageData {\r\n  code: string;\r\n  image?: string;\r\n  isEmote: boolean;\r\n}\r\n\r\ninterface ChatMessageDataHolder {\r\n  sender: string;\r\n  avatar: string;\r\n  type: number;\r\n  phase: number;\r\n  data: ChatMessageData[];\r\n}\r\n\r\n@Component({\r\n  selector: 'app-chat',\r\n  templateUrl: './chat.component.html',\r\n  styleUrls: ['./chat.component.css']\r\n})\r\nexport class ChatComponent implements OnInit {\r\n  messages: ChatMessageDataHolder[];\r\n  emoteMap: Map<string, string>;\r\n  emotes: string[];\r\n  defaultAvatar: string;\r\n  filteredEmotes: string[];\r\n  isRefreshingChat = false;\r\n  chatStartID = 0;\r\n  chatPhase = 0;\r\n  chatSubject: Subject<any>;\r\n  maxPhase = 0;\r\n  @Input() phase: number;\r\n  @Input() isDead: boolean;\r\n  @Input() username: string;\r\n  @Input() userID: number;\r\n  @Input() characterAvatar: string;\r\n  @Input() characterName: string;\r\n  @Input() canSend: boolean;\r\n  @ViewChild('chatEntry') chatEntry: ElementRef;\r\n  @ViewChild('chatTableHolder') chatTableHolder: ElementRef;\r\n  @ViewChild('chatTable') chatTable: ElementRef;\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.emoteMap = new Map<string, string>();\r\n    this.emoteMap.set('crybichu', 'https://cdn.discordapp.com/emojis/622202821940609065.png?v=1');\r\n    this.emoteMap.set('honk', 'https://cdn.discordapp.com/emojis/633488458022780939.png?v=1');\r\n    this.emoteMap.set('salutetri', 'https://cdn.discordapp.com/emojis/603325799948484609.png?v=1');\r\n    this.emoteMap.set('potatolenz', 'https://cdn.discordapp.com/emojis/609861969352196101.png?v=1');\r\n    this.emoteMap.set('furbaby', 'https://cdn.discordapp.com/emojis/695258347124817941.png?v=1');\r\n    this.emoteMap.set('tpose', 'https://cdn.discordapp.com/emojis/624458657010024449.png?v=1');\r\n    this.emoteMap.set('woolbaby', 'https://cdn.discordapp.com/emojis/757515237824921760.png?v=1');\r\n    this.emoteMap.set('begone', 'https://cdn.discordapp.com/emojis/653691327715868682.png?v=1');\r\n    this.emoteMap.set('biff', 'https://cdn.discordapp.com/emojis/801632481979138058.png?v=1');\r\n    this.emoteMap.set('BigF', 'https://cdn.discordapp.com/emojis/641062063002746891.png?v=1');\r\n    this.emoteMap.set('bonk', 'https://cdn.discordapp.com/emojis/657725330466799626.png?v=1');\r\n    this.emoteMap.set('breadsive', 'https://cdn.discordapp.com/emojis/700748202931912814.png?v=1');\r\n    this.emoteMap.set('bygun', 'https://cdn.discordapp.com/emojis/624458153131769878.png?v=1');\r\n    this.emoteMap.set('chefskiss', 'https://cdn.discordapp.com/emojis/614981976390238219.png?v=1');\r\n    this.emoteMap.set('BiologyNotes', 'https://cdn.discordapp.com/emojis/811279742745313300.png?v=1');\r\n    this.emotes = [];\r\n    for (const emote of this.emoteMap.keys()) {\r\n      this.emotes.push(emote);\r\n    }\r\n    this.defaultAvatar = this.emoteMap.get(this.emotes[Math.floor(Math.random() * this.emotes.length)]);\r\n    this.tryToFindDefaultAvatar();\r\n    this.emotes = this.emotes.sort((a, b) => a.localeCompare(b));\r\n    this.filteredEmotes = [];\r\n    this.messages = [];\r\n    this.chatSubject = new Subject<any>();\r\n    this.chatSubject.subscribe(data => this.parseChatData(data));\r\n    this.refreshChat();\r\n    setInterval(() => {\r\n      this.refreshChat();\r\n    }, 2000);\r\n  }\r\n\r\n  convertMessage(chatData: ChatData): ChatMessageDataHolder {\r\n    const data = [];\r\n    let currentMessage = '';\r\n    let couldBeEmote = false;\r\n    chatData.message.split('').forEach(char => {\r\n      if (char === ':') {\r\n        if (couldBeEmote) {\r\n          const emote = this.convertToEmote(currentMessage);\r\n          if (!!emote) {\r\n            data.push({code: currentMessage, image: emote, isEmote: true});\r\n            currentMessage = '';\r\n            couldBeEmote = false;\r\n          } else {\r\n            data.push({code: ':' + currentMessage, isEmote: false});\r\n            currentMessage = '';\r\n          }\r\n        } else {\r\n          data.push({code: currentMessage, isEmote: false});\r\n          currentMessage = '';\r\n          couldBeEmote = true;\r\n        }\r\n      } else {\r\n        currentMessage = currentMessage + char;\r\n      }\r\n    });\r\n    if (couldBeEmote) {\r\n      data.push({code: ':' + currentMessage, isEmote: false});\r\n    } else {\r\n      data.push({code: currentMessage, isEmote: false});\r\n    }\r\n    return {\r\n      sender: chatData.sender,\r\n      avatar: chatData.avatar,\r\n      type: chatData.type,\r\n      phase: chatData.phase,\r\n      data\r\n    };\r\n  }\r\n\r\n  getChatAvatar(): string {\r\n    if (this.characterAvatar !== '') {\r\n      return this.characterAvatar;\r\n    } else {\r\n      return this.defaultAvatar;\r\n    }\r\n  }\r\n\r\n  convertToEmote(emoteName: string): (string | undefined) {\r\n    return this.emoteMap.get(emoteName);\r\n  }\r\n\r\n  getMessageType(): number {\r\n    if (this.isDead) {\r\n      return -1;\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  getAutocompletedMessage(emote: string): string {\r\n    const currentText: string = this.chatEntry.nativeElement.value;\r\n    const words = currentText.split(' ');\r\n    if (words.length > 0) {\r\n      const caretPos = this.chatEntry.nativeElement.selectionStart;\r\n      words[this.getActiveWordIndex(words, caretPos)] = ':' + emote + ':';\r\n      return words.join(' ');\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  getActiveWordIndex(words: string[], caretPos: number): number {\r\n    let prevLength = 0;\r\n    let wordIndex = 0;\r\n    for (const word of words) {\r\n      const wordLength = word.length;\r\n      if (caretPos <= prevLength + wordLength) {\r\n        return wordIndex;\r\n      }\r\n      prevLength += wordLength + 1;\r\n      wordIndex++;\r\n    }\r\n    return words.length - 1;\r\n  }\r\n\r\n  ChatOnKey(event: KeyboardEvent): void {\r\n    if (event.code === 'Enter' && this.canSend && this.filteredEmotes.length === 0) {\r\n      const url: string = getMafiaURL() + '/chat/send';\r\n      /*const body = new URLSearchParams();\r\n      body.set(\"startID\", String(this.chatStartID))\r\n      body.set(\"phase\", String(this.phase))\r\n      body.set(\"avatar\", this.characterAvatar);\r\n      body.set(\"user_name\", this.username);\r\n      body.set(\"character_name\", this.characterName);\r\n      body.set(\"message\", this.chatEntry.nativeElement.value);*/\r\n      const phaseToUse = this.chatPhase;\r\n      const startID = this.chatStartID;\r\n\r\n      const body = {\r\n        startID,\r\n        phase: phaseToUse,\r\n        avatar: this.getChatAvatar(),\r\n        user_name: this.username,\r\n        character_name: this.characterName,\r\n        message: this.chatEntry.nativeElement.value\r\n      };\r\n      this.chatEntry.nativeElement.value = '';\r\n      const httpOptions = {\r\n        headers: new HttpHeaders({\r\n          'Content-Type': 'application/json',\r\n        })\r\n      };\r\n      this.http.post(url, body, httpOptions).subscribe((data: { status: number, query: string }) => {\r\n        console.log('Post Data: ' + data.status + ' ' + data.query);\r\n        this.chatSubject.next(data);\r\n      });\r\n    }\r\n    const currentText: string = this.chatEntry.nativeElement.value;\r\n    const words = currentText.split(' ');\r\n    if (words.length > 0) {\r\n      const caretPos = this.chatEntry.nativeElement.selectionStart;\r\n      let currentWord = words[this.getActiveWordIndex(words, caretPos)];\r\n      if (currentWord.startsWith(':')) {\r\n        currentWord = currentWord.substr(1);\r\n        this.filteredEmotes = this.emotes.filter(emote => emote.toLowerCase().startsWith(currentWord.toLowerCase()));\r\n      } else {\r\n        this.filteredEmotes = [];\r\n      }\r\n    } else {\r\n      this.filteredEmotes = [];\r\n    }\r\n  }\r\n\r\n  refreshChat(): void {\r\n    const startPhase = this.phase;\r\n    if (startPhase === this.phase && !this.isRefreshingChat) {\r\n      this.isRefreshingChat = true;\r\n      /*const url: string = getMafiaURL() + \"&action=read&phase=\" + startPhase + \"&messageType=\" + this.getMessageType() +\r\n        \"&startID=\" + this.chatStartID + \"&isDead=\" + (this.isDead ? 1 : 0) + \"&name=\" + this.username;*/\r\n      if (startPhase > this.maxPhase) {\r\n        this.chatStartID = 0;\r\n        this.chatPhase = startPhase;\r\n        this.maxPhase = this.chatPhase;\r\n      }\r\n      const url: string = getMafiaURL() + '/chat/read/' + this.username + '/' + startPhase + '/' + this.chatStartID;\r\n      this.http.get(url).subscribe(data => {\r\n        this.chatSubject.next(data);\r\n        this.isRefreshingChat = false;\r\n      });\r\n    }\r\n  }\r\n\r\n  parseChatData(data: any): void {\r\n    if (data.status === 0) {\r\n      const oldStartID = this.chatStartID;\r\n      data.chat.forEach(cdata => {\r\n        const mid: number = +cdata.id;\r\n        if (mid + 1 > this.chatStartID) {\r\n          this.chatStartID = mid + 1;\r\n        }\r\n      });\r\n      console.log(data);\r\n      const newChats: ChatMessageDataHolder[] = data.chat.filter(cdata => cdata.id >= oldStartID).map(cdata => {\r\n        const c: ChatData = {\r\n          sender: cdata.name,\r\n          avatar: cdata.avatar,\r\n          message: cdata.message,\r\n          type: cdata.messageType,\r\n          phase: cdata.phase\r\n        };\r\n        const m: ChatMessageDataHolder = this.convertMessage(c);\r\n        return m;\r\n      }).reverse();\r\n      console.log(newChats);\r\n      this.messages = this.messages.filter(message => message.phase === this.phase);\r\n      if (newChats.length > 0) {\r\n        this.messages = newChats.concat(this.messages);\r\n      }\r\n      console.log(this.messages);\r\n      console.log(this.phase);\r\n    }\r\n  }\r\n\r\n  tryToFindDefaultAvatar(): void {\r\n    const name = this.characterName;\r\n    const options: ([string[], string])[] = [\r\n      [['jake'], 'https://cdn.discordapp.com/attachments/738860771731308609/820533784918097971/unknown.png'],\r\n      [['j.*lian'], 'https://media.discordapp.net/attachments/738860771731308609/820534137806127104/unknown.png'],\r\n      [['zy.*'], 'https://cdn.discordapp.com/attachments/738860771731308609/820534373156651038/344e722ea7f880fad5b0bc1d2855615c.png'],\r\n      [['sh.*ve.*', 'soup.*', 'wooloo.*'], 'https://media.discordapp.net/attachments/738860771731308609/813204242181259264/unknown.png'],\r\n      [['dino.*', 'cow.*'], 'https://cdn.discordapp.com/attachments/738860771731308609/820534518297001994/5304162d8e15b5f3865eda80dbab8495.png'],\r\n      [['may.*', '.*union.*'], 'https://media.discordapp.net/attachments/532394137970933768/820512946085822494/poke_RedYellowBlueGreen.jpg'],\r\n      [['beep.*'], 'https://media.discordapp.net/attachments/738860771731308609/820534639634153482/3dd6ab13659e58c46296636248a61ebf.png'],\r\n      [['quag.*'], 'https://cdn.discordapp.com/attachments/738860771731308609/820512895569231902/4c9a49e2e9dd4b81a122f765a54c97b7.png'],\r\n      [['nik.*'], 'https://media.discordapp.net/attachments/738860771731308609/820534819011821568/e2bab855d641dfcb2f70275041f3c19a.png'],\r\n      [['lio.*'], 'https://media.discordapp.net/attachments/738860771731308609/820534983847313438/a_05915a54b6c6a08811aac838c551713b.png'],\r\n      [['saj.*'], 'https://cdn.discordapp.com/attachments/738860771731308609/820535280926326784/4abad0b6fdcb8166e4b189bf60ab6c61.png'],\r\n      [['.*hsc.*', 'tae.*', '.*ide', '.*ene', '.*ase', '.*ine', '.*ylene'], 'https://media.discordapp.net/attachments/738860771731308609/820535396458692668/4fb577085d18410eff4dd8d59240ca43.png'],\r\n      [['.*mika.*'], 'https://cdn.discordapp.com/attachments/738860771731308609/813206571029889034/unknown.png'],\r\n      [['.*rj.*'], 'https://media.discordapp.net/attachments/738860771731308609/813207754139369522/unknown.png'],\r\n      [['cl.*', '.*atsumu.*'], 'https://media.discordapp.net/attachments/738860771731308609/820535593301835786/1f8593ae86120a1cea9daf4496b52829.png'],\r\n      [['.*jade.*', '.*hockey.*'], 'https://media.discordapp.net/attachments/738860771731308609/820535723534581780/05bc9fe91b17b7d5624621afc4757461.png'],\r\n      [['.*earthy.*'], 'https://media.discordapp.net/attachments/738860771731308609/813208742820446268/unknown.png'],\r\n      [['.*kris.*'], 'https://cdn.discordapp.com/attachments/738860771731308609/820536334845476894/80356e726fb6bf0be4917c669ed423d3.png'],\r\n      [['.*lance.*', '.*hose.*'], 'https://media.discordapp.net/attachments/738860771731308609/820576990490918952/5we-GTac_400x400.png'],\r\n      [['.*zhou.*'], 'https://media.discordapp.net/attachments/738860771731308609/820536478739464242/6b9473bb4c378e5562f8cbb5fc9e6ed1.png']\r\n    ];\r\n    options.forEach(option => {\r\n      option[0].forEach(possibleName => {\r\n        if (name.toLowerCase().match(possibleName) !== null) {\r\n          this.defaultAvatar = option[1];\r\n        }\r\n      });\r\n    });\r\n  }\r\n}\r\n","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-visual-novel',\r\n  templateUrl: './visual-novel.component.html',\r\n  styleUrls: ['./visual-novel.component.css']\r\n})\r\nexport class VisualNovelComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  targetText: string;\r\n  currentLength: number;\r\n  breaks : number[];\r\n  currLineIndex : number;\r\n  @ViewChild('widthChecker') widthChecker: ElementRef;\r\n\r\n  ngOnInit(): void {\r\n    this.breaks = [0, 0, 0, 0, 0]\r\n    this.currLineIndex = 0;\r\n    this.targetText = \"Do you believe in magic? Oh never believe its not so for if the magic you believe in can not be more than cheese than who am I to say that cheese is not but a reality.\"\r\n    this.currentLength = 0;\r\n    setInterval(() => {\r\n      this.breaks[this.currLineIndex + 1] += 1;\r\n      if(this.widthChecker.nativeElement.offsetWidth > 400) {\r\n        this.currLineIndex += 1;\r\n        this.breaks[this.currLineIndex + 1] = this.breaks[this.currLineIndex];\r\n      }\r\n    }, 50)\r\n  }\r\n\r\n}\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\n\r\n@Component({\r\n  selector: 'app-fe-bean-preview',\r\n  templateUrl: './fe-bean-preview.component.html',\r\n  styleUrls: ['./fe-bean-preview.component.css']\r\n})\r\nexport class FeBeanPreviewComponent implements OnInit {\r\n  colorID : string;\r\n  hatID : string;\r\n  showPrimary = true;\r\n  @Input() character : string;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  ngOnInit(): void {\r\n    const url: string = \"http://jaketheduck.com/games/phpapi/gamedata.php?type=chardata&character=\" + this.character;\r\n    this.http.get(url).subscribe((data: {}) => {\r\n      if (data[\"status\"] == 0) {\r\n        console.log(\"COLORID: \" + data[\"colorID\"]);\r\n        this.colorID = data[\"colorID\"];\r\n        this.hatID = data[\"hatID\"];\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\" [style.width.px]=\"200 * this.scale\" [style.height.px]=\"350 * this.scale\">\r\n  <div class=\"hat\">\r\n    <img class=\"hat\" src=\"{{this.hatSrc}}\"  [style.width.px]=\"this.scale * this.width\" [style.top.px]=\"this.scale * this.hatdy\" [style.left.px]=\"this.scale * this.hatdx\"/>\r\n  </div>\r\n  <div class=\"bean\">\r\n    <img class=\"bean\" [style.width.px]=\"200 * this.scale\" [style.top.px]=\"65 * this.scale\" src=\"{{this.colorSrc}}\"/>\r\n  </div>\r\n</div>\r\n","<div>\r\n  <app-bean-preview [colorID]=\"this.colorID\" [hatID]=\"this.hatID\" scale=\"0.5\"></app-bean-preview>\r\n</div>\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import {Component, ElementRef, Input, OnInit, ViewChild} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-icon-with-tooltip',\r\n  templateUrl: './icon-with-tooltip.component.html',\r\n  styleUrls: ['./icon-with-tooltip.component.css']\r\n})\r\nexport class IconWithTooltipComponent implements OnInit {\r\n  @Input() name: string;\r\n  @Input() icon: string;\r\n  @Input() description: string;\r\n  @ViewChild('iconRef') iconRef: ElementRef;\r\n  shouldShow = false;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  isOnRight(): boolean {\r\n    const x = this.iconRef.nativeElement.getBoundingClientRect().left;\r\n    const width = window.innerWidth;\r\n    return x * 2 > width;\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"loginForm\" id=\"login-form\">\r\n  <h2>Discord Graph Menu</h2>\r\n  <mat-icon class=\"lefticon\">face</mat-icon>\r\n  <mat-form-field appearance=\"fill\">\r\n    <input required matInput id=\"name\" formControlName=\"name\" type=\"text\" placeholder=\"Your discord name\" class=\"input\" #user>\r\n    <mat-error>\r\n      <div *ngIf=\"loginForm?.controls.name?.errors?.required\">Required Field</div>\r\n      <div *ngIf=\"loginForm?.controls.name?.errors?.minlength\">Minimum Length is 2</div>\r\n      <div *ngIf=\"loginForm?.controls.name?.errors?.maxlength\">Maximum Length is 20</div>\r\n      <div *ngIf=\"loginForm?.controls.name?.errors?.pattern\">Only alphanumeric and space is allowed in names</div>\r\n    </mat-error>\r\n  </mat-form-field><br/>\r\n  <div class=\"spacer\"></div><br/>\r\n  <h3>Who would you say is the main person who convinced you to join the server? (if godspeed enter quag)</h3>\r\n  <mat-icon class=\"lefticon\">videogame_asset</mat-icon>\r\n  <mat-form-field appearance=\"fill\">\r\n    <input type=\"text\"\r\n           placeholder=\"Pick one\"\r\n           matInput\r\n           formControlName=\"parent\"\r\n           [matAutocomplete]=\"auto\"\r\n           #parent>\r\n    <mat-autocomplete #auto=\"matAutocomplete\">\r\n      <mat-option *ngFor=\"let parent of this.filteredParents | async\" [value]=\"parent\">\r\n        {{parent}}\r\n      </mat-option>\r\n    </mat-autocomplete>\r\n  </mat-form-field>\r\n  <br/>\r\n  <div class=\"spacer\"></div><br/>\r\n  <button mat-raised-button color=\"primary\" [disabled]=\"!this.loginForm.valid\" (click)=\"submit(user.value, parent.value)\">Add/Update</button>\r\n  <div>{{statusText}}</div>\r\n</form>\r\n<div class=\"treeView\">\r\n  <mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\" class=\"example-tree\">\r\n    <!-- This is the tree node template for leaf nodes -->\r\n    <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodeToggle>\r\n      <li class=\"mat-tree-node\">\r\n        <!-- use a disabled button to provide padding for tree leaf -->\r\n        <button mat-icon-button disabled></button>\r\n        {{node.name}}\r\n      </li>\r\n    </mat-tree-node>\r\n    <!-- This is the tree node template for expandable nodes -->\r\n    <mat-nested-tree-node *matTreeNodeDef=\"let node; when: hasChild\">\r\n      <li>\r\n        <div class=\"mat-tree-node\">\r\n          <button mat-icon-button matTreeNodeToggle\r\n                  [attr.aria-label]=\"'Toggle ' + node.name\">\r\n            <mat-icon class=\"mat-icon-rtl-mirror\">\r\n              {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\r\n            </mat-icon>\r\n          </button>\r\n          {{node.name}}\r\n        </div>\r\n        <ul [class.example-tree-invisible]=\"!treeControl.isExpanded(node)\">\r\n          <ng-container matTreeNodeOutlet></ng-container>\r\n        </ul>\r\n      </li>\r\n    </mat-nested-tree-node>\r\n  </mat-tree>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {Router} from \"@angular/router\";\r\nimport {MatAutocomplete} from \"@angular/material/autocomplete\";\r\nimport {MatTree, MatTreeNestedDataSource} from \"@angular/material/tree\";\r\nimport {map, startWith} from \"rxjs/operators\";\r\nimport {Observable} from \"rxjs\";\r\nimport {NestedTreeControl} from \"@angular/cdk/tree\";\r\n\r\ninterface PersonNode {\r\n  name: string;\r\n  children?: PersonNode[];\r\n}\r\n\r\ninterface PersonNodeTemp {\r\n  name: string;\r\n  children?: number[];\r\n  parent: string;\r\n}\r\n\r\nconst TREE_DATA: PersonNode[] = [];\r\n\r\n@Component({\r\n  selector: 'app-discord-mappings-add',\r\n  templateUrl: './discord-mappings-add.component.html',\r\n  styleUrls: ['./discord-mappings-add.component.css']\r\n})\r\nexport class DiscordMappingsAddComponent implements OnInit {\r\n\r\n  loginForm : FormGroup;\r\n  selected: string;\r\n  parents: string[] = [];\r\n  filteredParents: Observable<string[]>;\r\n  statusText = \"\";\r\n  treeControl = new NestedTreeControl<PersonNode>(node => node.children);\r\n  dataSource = new MatTreeNestedDataSource<PersonNode>();\r\n\r\n  constructor(private http: HttpClient, private formBuilder: FormBuilder, private router: Router) {\r\n    this.loginForm = this.formBuilder.group({\r\n      name: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(20)]],\r\n      parent: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(20)]]\r\n    });\r\n    this.dataSource.data = TREE_DATA;\r\n    this.refreshParents()\r\n    this.filteredParents = this.loginForm.controls[\"parent\"].valueChanges.pipe(\r\n      startWith(''),\r\n      map(value => this.filterNames(value))\r\n    )\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    setInterval(() => {\r\n      this.refreshParents();\r\n    }, 5000)\r\n    const url : string = \"http://jaketheduck.com/discord-mapping-api/api.php?type=alldata\";\r\n    this.http.get(url).subscribe((data : {}) => {\r\n      console.log(\"Data: \" + data);\r\n      console.log(\"Status: \" + data[\"status\"]);\r\n      if(data[\"status\"] == 0) {\r\n        const basis : PersonNodeTemp[] = data[\"players\"].map(p => {\r\n          return {name: p[\"name\"], parent: p[\"parent\"], children: []};\r\n        });\r\n        basis.push({name: \"?\", parent: \"?\", children: []});\r\n        const qindex = basis.length - 1;\r\n        basis.forEach(b => {\r\n          let parentIndex = basis.findIndex(p => p.name == b.parent);\r\n          const myIndex = basis.findIndex(p => p.name == b.name);\r\n          if(parentIndex == -1) {\r\n            basis.push({name: b.parent, parent: \"?\", children: []})\r\n            parentIndex = basis.length - 1;\r\n            basis[qindex].children.push(parentIndex);\r\n          }\r\n          if(myIndex != parentIndex) {\r\n            basis[parentIndex].children.push(myIndex);\r\n          }\r\n        })\r\n        console.log(basis);\r\n        this.dataSource.data = basis.filter(b => b.name == b.parent).map(b => {return this.qqq(basis.findIndex(p => p.name == b.name), basis);});\r\n        console.log(this.dataSource.data);\r\n      }\r\n    })\r\n  }\r\n\r\n  refreshParents() : void {\r\n    const url : string = \"http://jaketheduck.com/discord-mapping-api/api.php?type=data\";\r\n    this.http.get(url).subscribe((data : {}) => {\r\n      console.log(\"Data: \" + data);\r\n      console.log(\"Status: \" + data[\"status\"]);\r\n      if(data[\"status\"] == 0) {\r\n        this.parents = data[\"players\"];\r\n      }\r\n    })\r\n  }\r\n\r\n  filterNames(name: string) : string[] {\r\n    console.log(\"I CRY\");\r\n   return this.parents.filter(option => option.toLowerCase().includes(name.toLowerCase()))\r\n  }\r\n\r\n  submit(name: string, parent: string) {\r\n    const url : string = \"http://jaketheduck.com/discord-mapping-api/api.php?type=update&name=\" + name.toLowerCase() + \"&parent=\" + parent.toLowerCase();\r\n    this.http.get(url).subscribe((data : {}) => {\r\n      console.log(\"Data: \" + data);\r\n      console.log(\"Status: \" + data[\"status\"]);\r\n      if(data[\"status\"] == 0) {\r\n        this.statusText = name + \" was added successfully\";\r\n      } else {\r\n        this.statusText = \"request was not successful with code: \" + data[\"status\"];\r\n      }\r\n    })\r\n  }\r\n\r\n  qqq(i : number, basis: PersonNodeTemp[]) : PersonNode {\r\n    return {name: basis[i].name, children: basis[i].children.map(j => this.qqq(j, basis))}\r\n  }\r\n\r\n  hasChild = (_: number, node: PersonNode) => !!node.children && node.children.length > 0;\r\n}\r\n","<div id=\"game\">\r\n  <app-fe3hau *ngIf=\"this.game === 'fe3hau'\">\r\n  </app-fe3hau>\r\n  <app-mafia [username]=\"this.username\" *ngIf=\"this.game === 'mafia'\">\r\n  </app-mafia>\r\n</div>\r\n","<div class=\"view\">\r\n  <div id=\"lobby\">\r\n    <div class=\"lobby-table\">\r\n      <div *ngFor=\"let section of this.sections\">\r\n        <div><h2>{{section.title}}</h2></div>\r\n        <div *ngFor='let player of section.items; let index = index' class=\"lobby-table-div\"\r\n             [class.lobby-table-even]=\"0 === index % 2 && player.name !== this.active\"\r\n             [class.lobby-table-active]=\"player.name === this.active\">\r\n          <div class=\"status-icon\">\r\n            <app-icon-with-tooltip\r\n              [name]=\"player.roleName\" [icon]=\"player.roleIcon\" [description]=\"player.roleDescription\"\r\n              *ngIf=\"!!player.roleName\">\r\n            </app-icon-with-tooltip>\r\n            <mat-icon *ngIf=\"player.time < 20 && !player.icon\" class=\"lefticon\">face</mat-icon>\r\n            <mat-icon *ngIf=\"player.time >= 20 && player.time < 40 && !player.icon\" class=\"lefticon\">access_alarm\r\n            </mat-icon>\r\n            <mat-icon *ngIf=\"player.time >= 40 && !player.icon\" class=\"lefticon\">warning</mat-icon>\r\n          </div>\r\n          <img class=\"avatar\" [src]=\"player.icon\" *ngIf=\"!!player.icon\" [ngClass]=\"{'gray':player.isGrayed}\">\r\n          {{player.name}}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","<div class=\"container\">\r\n  <app-bean-preview [colorID]=\"this.colorID\" [hatID]=\"this.hatID\" scale=\"0.5\"></app-bean-preview>\r\n  <div>\r\n    Name: {{this.characterName}}\r\n  </div>\r\n  <div>\r\n    Color: {{this.colorID}}\r\n  </div>\r\n  <div>\r\n    Hat: {{this.hatID}}\r\n  </div>\r\n  <div>\r\n    <button mat-raised-button color=\"primary\" [disabled]=\"this.startingNewRound\" (click)=\"this.startRound()\">Roll New Round</button>\r\n  </div>\r\n</div>\r\n\r\n","import { Component } from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'games';\r\n}\r\n\r\nfunction randomInt(): number {\r\n  const random = Math.floor(Math.random() * 1000000000000);\r\n  return random;\r\n}\r\n\r\nexport function getLoginURL(): string {\r\n  /*const randomVal = randomInt();\r\n  if(location.protocol === 'https:') {\r\n    return 'https://jaketheduck.com/games/phpapi/login.php?randomGen=' + randomVal;\r\n  } else {\r\n    return 'http://jaketheduck.com/games/phpapi/login.php?randomGen=' + randomVal;\r\n  }*/\r\n  return \"/api/login\";\r\n}\r\n\r\nexport function getMafiaURL(): string {\r\n  /*const randomVal = randomInt();\r\n  if(location.protocol === 'https:') {\r\n    return 'https://jaketheduck.com/games/phpapi/mafia.php?randomGen=' + randomVal;\r\n  } else {\r\n    return 'http://jaketheduck.com/games/phpapi/mafia.php?randomGen=' + randomVal;\r\n  }*/\r\n  return \"/api/mafia\"\r\n}\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {MatTooltip} from '@angular/material/tooltip';\r\nimport {LobbyItem, LobbySection} from '../lobby/lobby.component';\r\nimport {Player} from '../game/game.component';\r\nimport {AppComponent, getMafiaURL} from '../app.component';\r\nimport {Observable, Subject, Subscription} from 'rxjs';\r\nimport {catchError, debounceTime, switchMap} from 'rxjs/operators';\r\nimport {empty} from 'rxjs';\r\nimport {FormControl, FormGroup} from \"@angular/forms\";\r\n\r\ninterface Role {\r\n  id: number;\r\n  name: string;\r\n  team: number;\r\n  description: string;\r\n  icon: string;\r\n}\r\n\r\ninterface Character {\r\n  name: string;\r\n  avatar: string;\r\n  alive: boolean;\r\n  roleID: number;\r\n  id: number;\r\n}\r\n\r\ninterface VoteField {\r\n  type: string;\r\n  options: string[];\r\n  barrierID: number;\r\n}\r\n\r\ninterface Vote {\r\n  name: string;\r\n  vote: string;\r\n}\r\n\r\ninterface VoteContainer {\r\n  title: string;\r\n  list: Vote[];\r\n  fields: VoteField[];\r\n}\r\n\r\n@Component({\r\n  selector: 'app-mafia',\r\n  templateUrl: './mafia.component.html',\r\n  styleUrls: ['./mafia.component.scss']\r\n})\r\nexport class MafiaComponent implements OnInit {\r\n  @Input() username: string;\r\n  userID = 0;\r\n  isLeader: boolean;\r\n  players: Player[];\r\n  started = false;\r\n  phase = 0;\r\n  isRefreshingStatus = false;\r\n  isRefreshingMain = false;\r\n  roles: Role[];\r\n  selectedRoles: Map<Role, number>;\r\n  roleCounts: { role: Role, count: number }[];\r\n  hoveredRoles: Map<string, boolean>;\r\n  characters: Character[];\r\n  myCharacter: string;\r\n  myCharacterAvatar: string;\r\n  lobbySections: LobbySection[];\r\n  aliveCharacterNames: string[];\r\n  isAlive: boolean;\r\n  /*voteChoice: string;\r\n  votes: { name: string, vote: string }[];\r\n  votingTitle: string;\r\n  voteBarrierID: number;*/\r\n  voteContainers: VoteContainer[];\r\n  isDay = true;\r\n  dayCount = 1;\r\n  activeRoles: { role: Role, amount: number }[];\r\n  willSubject: Subject<string>;\r\n  myRole = -1;\r\n  characterGroups: { id: number, name: string }[];\r\n  characterGroupChoice = 1;\r\n  lastCheckedPhase = -1;\r\n  votingFormGroup: FormGroup;\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log('Mafia Version 0.1');\r\n    this.voteContainers = [];\r\n    this.votingFormGroup = new FormGroup({});\r\n    this.roleCounts = [];\r\n    this.activeRoles = [];\r\n    this.characterGroups = [];\r\n    this.aliveCharacterNames = [];\r\n    this.isAlive = false;\r\n    this.selectedRoles = new Map<Role, number>();\r\n    this.hoveredRoles = new Map<string, boolean>();\r\n    this.lobbySections = [];\r\n    this.roles = [];\r\n    this.willSubject = new Subject<string>();\r\n    this.willSubject.pipe(debounceTime(5000), switchMap(value => this.updateWill(value))).pipe(catchError(() => empty())).subscribe(() => {\r\n      console.log('WILL UPDATED');\r\n    });\r\n    this.refreshStatus();\r\n    setInterval(() => {\r\n      this.refreshStatus();\r\n    }, 2000);\r\n    const roleURL: string = getMafiaURL() + '/roles';\r\n    this.http.get(roleURL).subscribe((data: Role[]) => {\r\n      this.roles = data;\r\n    });\r\n    const characterGroupURL: string = getMafiaURL() + '/character/groups';\r\n    this.http.get(characterGroupURL).subscribe((data: { info: { id: number, name: string }[] }) => {\r\n      console.log('CHARACTER GROUPS: ' + data);\r\n      this.characterGroups = data.info;\r\n    });\r\n    this.isLeader = false;\r\n  }\r\n\r\n  addRole(role: Role): void {\r\n    if (this.selectedRoles.has(role)) {\r\n      this.selectedRoles.set(role, this.selectedRoles.get(role) + 1);\r\n    } else {\r\n      this.selectedRoles.set(role, 1);\r\n    }\r\n    this.roleCounts = this.getSelectedRoleCounts();\r\n  }\r\n\r\n  removeRole(role: Role): void {\r\n    if (this.selectedRoles.has(role)) {\r\n      this.selectedRoles.set(role, this.selectedRoles.get(role) - 1);\r\n      if (this.selectedRoles.get(role) <= 0) {\r\n        this.selectedRoles.delete(role);\r\n      }\r\n    }\r\n    this.roleCounts = this.getSelectedRoleCounts();\r\n  }\r\n\r\n  getSelectedRoleCounts(): { role: Role, count: number }[] {\r\n    const data = [];\r\n    for (const key of this.selectedRoles.keys()) {\r\n      data.push({role: key, count: this.selectedRoles.get(key)});\r\n    }\r\n    return data;\r\n  }\r\n\r\n  refreshStatus(): void {\r\n    interface StatusResponse {\r\n      status: number;\r\n      info: {\r\n        lobbyData: Player[];\r\n        gameStatus: {\r\n          started: boolean;\r\n          phase: number;\r\n          day: boolean;\r\n          dayCount: number;\r\n        };\r\n        activeRoles: { name: string, amount: number }[];\r\n        characters: Character[];\r\n        myCharacter: string;\r\n        votingData: VoteContainer[];\r\n      };\r\n    }\r\n\r\n    console.log('REFRESH STATUS');\r\n    this.refreshLobbyItems();\r\n    if (!this.isRefreshingStatus) {\r\n      this.isRefreshingStatus = true;\r\n      const url: string = getMafiaURL() + '/status/' + this.username;\r\n      console.log('REFRSH STATUS URL');\r\n      this.http.get(url).subscribe((data: StatusResponse) => {\r\n        console.log('Status Data: ');\r\n        console.log(data);\r\n        if (!!data && data.status === 0) {\r\n          this.players = data.info.lobbyData;\r\n          this.started = data.info.gameStatus.started;\r\n          this.phase = data.info.gameStatus.phase;\r\n          this.isDay = data.info.gameStatus.day;\r\n          this.dayCount = data.info.gameStatus.dayCount;\r\n          if (this.started) {\r\n            if (this.lastCheckedPhase !== this.phase && !!this.roles && this.roles.length > 0) {\r\n              this.activeRoles = data.info.activeRoles.map(rdata => {\r\n                const relatedRole = this.roles.find(role => role.name === rdata.name);\r\n                return {\r\n                  role: relatedRole,\r\n                  amount: rdata.amount\r\n                };\r\n              });\r\n              this.lastCheckedPhase = this.phase;\r\n              // this.voteChoice = null;\r\n            }\r\n            this.characters = data.info.characters;\r\n            this.aliveCharacterNames = this.characters.filter(char => char.alive).map(char => char.name);\r\n            this.myCharacter = data.info.myCharacter;\r\n            this.myRole = this.characters.find(char => char.name === this.myCharacter)?.roleID;\r\n            this.isAlive = this.characters.find(char => char.name === this.myCharacter)?.alive;\r\n            this.myCharacterAvatar = this.characters.find(char => char.name === this.myCharacter)?.avatar;\r\n            if (!!data.info.votingData) {\r\n              data.info.votingData.forEach(vd => {\r\n                vd.fields.forEach(field => {\r\n                  const fieldName = this.getFormControlName(field);\r\n                  if (!this.votingFormGroup.contains(fieldName)) {\r\n                    this.votingFormGroup.addControl(fieldName, new FormControl(''));\r\n                  }\r\n                });\r\n              });\r\n              this.voteContainers = data.info.votingData;\r\n            } else {\r\n              this.voteContainers = [];\r\n            }\r\n            /*if (!!data.info.votingData && data.info.votingData.length > 0) {\r\n              this.votes = data.info.votingData[0].list;\r\n              this.votingTitle = data.info.votingData[0].title;\r\n              this.voteBarrierID = data.info.votingData[0].id;\r\n            } else {\r\n              this.votes = [];\r\n              this.votingTitle = '';\r\n              this.voteBarrierID = 0;\r\n            }*/\r\n          } else {\r\n            this.activeRoles = [];\r\n          }\r\n        }\r\n        this.isRefreshingStatus = false;\r\n      });\r\n    }\r\n    this.isLeader = !!this.players && this.players.length > 0 && this.username === this.players[0].name;\r\n  }\r\n\r\n  getCharacterIDFromCharacterName(name: string): number {\r\n    return this.characters.find(char => char.name === name)?.id;\r\n  }\r\n\r\n  getLobbyRoleInfo(roleID: number): Role {\r\n    return this.roles.find(role => role.id === roleID);\r\n  }\r\n\r\n  refreshLobbyItems(): void {\r\n    if (this.started) {\r\n      const aliveLobbyItems = this.characters.filter(char => char.alive).map(character => {\r\n        const roleInfo = this.getLobbyRoleInfo(character.roleID);\r\n        return {\r\n          name: character.name,\r\n          time: 0,\r\n          icon: character.avatar,\r\n          isGrayed: false,\r\n          roleIcon: roleInfo?.icon,\r\n          roleName: roleInfo?.name,\r\n          roleDescription: roleInfo?.description\r\n        };\r\n      });\r\n      const deadLobbyItems = this.characters.filter(char => !char.alive).map(char => {\r\n        const roleInfo = this.getLobbyRoleInfo(char.roleID);\r\n        return {\r\n          name: char.name,\r\n          time: 0,\r\n          icon: char.avatar,\r\n          isGrayed: true,\r\n          roleIcon: roleInfo?.icon,\r\n          roleName: roleInfo?.name,\r\n          roleDescription: roleInfo?.description\r\n        };\r\n      });\r\n      const aliveLobby: LobbySection = {\r\n        title: 'Players',\r\n        items: aliveLobbyItems\r\n      };\r\n      const deadLobby: LobbySection = {\r\n        title: 'Graveyard',\r\n        items: deadLobbyItems\r\n      };\r\n      this.lobbySections = [aliveLobby, deadLobby];\r\n    } else if (!!this.players) {\r\n      this.lobbySections = [{\r\n        title: 'Players',\r\n        items:\r\n          this.players.map(player => {\r\n            const item: LobbyItem = {\r\n              name: player.name,\r\n              time: player.time,\r\n              icon: null,\r\n              isGrayed: false,\r\n              roleIcon: null,\r\n              roleName: null,\r\n              roleDescription: null\r\n            };\r\n            return item;\r\n          })\r\n      }];\r\n    } else {\r\n      this.lobbySections = [];\r\n    }\r\n  }\r\n\r\n  getChatName(): string {\r\n    if (!!this.myCharacter && this.started) {\r\n      return this.myCharacter;\r\n    } else {\r\n      return this.username;\r\n    }\r\n  }\r\n\r\n  getChatAvatar(): string {\r\n    if (!!this.myCharacterAvatar && this.started) {\r\n      return this.myCharacterAvatar;\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  startGame(): void {\r\n    let url: string = getMafiaURL() + '/setup?group=' + this.characterGroupChoice;\r\n    this.roles.forEach(role => {\r\n      let roleCount = this.selectedRoles.get(role);\r\n      roleCount = !!roleCount ? roleCount : 0;\r\n      url += '&' + role.name + '=' + roleCount;\r\n    });\r\n    this.http.get(url).subscribe((data: {}) => {\r\n    });\r\n  }\r\n\r\n  canStartGame(): boolean {\r\n    let roles = 0;\r\n    for (const roleCount of this.roleCounts) {\r\n      roles += roleCount.count;\r\n    }\r\n    return roles === this.players.length;\r\n  }\r\n\r\n  sendDayVote(voteName: string, containerID: number): void {\r\n    const url: string = getMafiaURL() + '/vote/' + this.username + '/' + containerID + '/' + voteName;\r\n    this.http.get(url).subscribe((data: {}) => {\r\n      console.log('Vote sent');\r\n    });\r\n  }\r\n\r\n  sendVoteTextEvent(field: VoteField): void {\r\n    const containerID = field.barrierID;\r\n    const voteName = this.votingFormGroup.get(this.getFormControlName(field)).value;\r\n    if(voteName.length >= 4) {\r\n      const url: string = getMafiaURL() + '/vote/' + this.username + '/' + containerID + '/' + voteName;\r\n      this.http.get(url).subscribe((data: {}) => {\r\n        console.log('Vote sent');\r\n      });\r\n    }\r\n  }\r\n\r\n  updateWill(will: string): Observable<any> {\r\n    const url: string = getMafiaURL() + '/will';\r\n    const body = {name: this.username, will};\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n      })\r\n    };\r\n    return this.http.post(url, body, httpOptions);\r\n  }\r\n\r\n  getFormControlName(field: VoteField): string {\r\n    return 'vote-barrier-field-' + field.barrierID;\r\n  }\r\n\r\n  voteContainerTrackBy(index: number, item: VoteContainer): number {\r\n    return item.fields[0].barrierID;\r\n  }\r\n\r\n  voteFieldTrackBy(index: number, item: VoteField): number {\r\n    return item.barrierID;\r\n  }\r\n}\r\n","<div class=\"chat-holder-holder\">\r\n  <div class=\"chat-holder\">\r\n    <div class=\"chat-table-holder\" #chatTableHolder>\r\n      <table class=\"chat-table\" #chatTable>\r\n        <tr *ngFor=\"let message of this.messages\">\r\n          <td class=\"sender-avatar-holder\"><img [src]=\"message.avatar\" class=\"sender-avatar\"></td>\r\n          <td>\r\n            <div [class.dead]=\"message.type === 0\" class=\"messageContent\">\r\n              <div class=\"sender\">{{message.sender}}</div>\r\n              <div class=\"messageText\">\r\n                <span *ngFor=\"let messageData of message.data\">\r\n                  <span *ngIf=\"messageData.isEmote\">\r\n                    <img class=\"emote\" [src]=\"messageData.image\">\r\n                  </span>\r\n                  <span *ngIf=\"!messageData.isEmote\">{{messageData.code}}</span>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n      </table>\r\n    </div>\r\n    <mat-form-field class=\"chat-input\" appearance=\"fill\">\r\n      <mat-label>Send Message...</mat-label>\r\n      <input matInput type=\"text\" (keyup)=\"ChatOnKey($event)\" [matAutocomplete]=\"auto\" #chatEntry>\r\n      <mat-autocomplete #auto=\"matAutocomplete\">\r\n        <mat-option *ngFor=\"let emote of this.filteredEmotes\" [value]=\"getAutocompletedMessage(emote)\" (click)=\"this.filteredEmotes = []\">\r\n          <img class=\"emote\" [src]=\"this.emoteMap.get(emote)\">{{emote}}\r\n        </mat-option>\r\n      </mat-autocomplete>\r\n    </mat-form-field>\r\n  </div>\r\n</div>\r\n","<form [formGroup]=\"loginForm\" id=\"login-form\">\r\n  <h2>Join Game Menu</h2>\r\n  <mat-icon class=\"lefticon\">face</mat-icon>\r\n  <mat-form-field appearance=\"fill\">\r\n    <input required matInput id=\"user\" formControlName=\"name\" type=\"text\" placeholder=\"username\" class=\"input\" #user>\r\n    <mat-error>\r\n      <div *ngIf=\"loginForm?.controls.name?.errors?.required\">Required Field</div>\r\n      <div *ngIf=\"loginForm?.controls.name?.errors?.minlength\">Minimum Length is 3</div>\r\n      <div *ngIf=\"loginForm?.controls.name?.errors?.maxlength\">Maximum Length is 20</div>\r\n      <div *ngIf=\"loginForm?.controls.name?.errors?.pattern\">Only alphanumeric and space is allowed in names</div>\r\n    </mat-error>\r\n  </mat-form-field><br/>\r\n  <div class=\"spacer\"></div><br/>\r\n  <mat-icon class=\"lefticon\">videogame_asset</mat-icon>\r\n  <mat-form-field appearance=\"fill\">\r\n    <mat-label>Select an option</mat-label>\r\n    <mat-select [(value)]=\"selected\" required formControlName=\"game\">\r\n      <mat-option value=\"fe3hau\">FE3H Among Us</mat-option>\r\n      <mat-option value=\"mafia\">Mafia</mat-option>\r\n    </mat-select>\r\n    <mat-error>\r\n      <span *ngIf=\"loginForm?.controls.name?.errors?.required\">Required Field</span>\r\n    </mat-error>\r\n  </mat-form-field>\r\n    <br/>\r\n  <div class=\"spacer\"></div><br/>\r\n  <button mat-raised-button color=\"primary\" (click)=\"join(user.value, selected)\">Join</button>\r\n</form>\r\n","import {BrowserModule} from '@angular/platform-browser';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations'\r\nimport {MatAutocompleteModule} from \"@angular/material/autocomplete\";\r\nimport {MatIconModule} from \"@angular/material/icon\";\r\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\r\nimport {MatInputModule} from \"@angular/material/input\";\r\nimport {MatSelectModule} from \"@angular/material/select\";\r\nimport {MatOptionModule} from \"@angular/material/core\";\r\nimport {MatButtonModule} from \"@angular/material/button\";\r\nimport {MatTreeModule} from \"@angular/material/tree\";\r\nimport {ReactiveFormsModule} from \"@angular/forms\";\r\nimport {NgModule} from '@angular/core';\r\nimport {AppComponent} from './app.component';\r\nimport {LoginComponent} from './login/login.component';\r\nimport { LobbyComponent } from './lobby/lobby.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { Fe3hauComponent } from './fe3hau/fe3hau.component';\r\nimport { BeanPreviewComponent } from './bean-preview/bean-preview.component';\r\nimport { FeBeanPreviewComponent } from './fe-bean-preview/fe-bean-preview.component'\r\nimport {MatDividerModule} from \"@angular/material/divider\";\r\nimport { FeBeanListComponent } from './fe-bean-list/fe-bean-list.component';\r\nimport { VisualNovelComponent } from './visual-novel/visual-novel.component';\r\nimport { DiscordMappingsAddComponent } from './discord-mappings-add/discord-mappings-add.component';\r\nimport { MafiaComponent } from './mafia/mafia.component';\r\nimport { ChatComponent } from './chat/chat.component';\r\nimport {MatTooltipModule} from \"@angular/material/tooltip\";\r\nimport { GameComponent } from './game/game.component';\r\nimport { IconWithTooltipComponent } from './icon-with-tooltip/icon-with-tooltip.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'discord-mapping', component: DiscordMappingsAddComponent },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'game/:game/:username', component: GameComponent },\r\n  { path: 'display', component: FeBeanListComponent },\r\n  { path: 'visual-novel', component: VisualNovelComponent },\r\n  { path: '', redirectTo: '/login', pathMatch: 'full' },\r\n];\r\n\r\n@NgModule\r\n({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    LobbyComponent,\r\n    Fe3hauComponent,\r\n    BeanPreviewComponent,\r\n    FeBeanPreviewComponent,\r\n    FeBeanListComponent,\r\n    VisualNovelComponent,\r\n    DiscordMappingsAddComponent,\r\n    MafiaComponent,\r\n    ChatComponent,\r\n    GameComponent,\r\n    IconWithTooltipComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    MatIconModule,\r\n    ReactiveFormsModule,\r\n    MatAutocompleteModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    MatOptionModule,\r\n    MatSelectModule,\r\n    MatTreeModule,\r\n    MatButtonModule,\r\n    RouterModule.forRoot(routes),\r\n    MatDividerModule,\r\n    MatTooltipModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\n\r\n//Beans from https://among-us.fandom.com/wiki/Category:Colors\r\n//Hats from https://among-us.fandom.com/wiki/Cosmetics\r\n\r\n@Component({\r\n  selector: 'app-fe3hau',\r\n  templateUrl: './fe3hau.component.html',\r\n  styleUrls: ['./fe3hau.component.css']\r\n})\r\nexport class Fe3hauComponent implements OnInit {\r\n  name: string;\r\n  game: string;\r\n  characterName: string;\r\n  colorID: number;\r\n  hatID: number;\r\n  startingNewRound = false;\r\n  constructor(private http: HttpClient, private activatedRoute : ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.name = this.activatedRoute.snapshot.paramMap.get(\"username\");\r\n    this.game = this.activatedRoute.snapshot.paramMap.get(\"game\");\r\n    this.refreshPreview();\r\n    setInterval(() => {\r\n      this.refreshPreview();\r\n    }, 5000)\r\n  }\r\n\r\n  refreshPreview() : void {\r\n\r\n    const url : string = \"http://jaketheduck.com/games/phpapi/gamedata.php?type=mapping&name=\" + this.name + \"&game=\" + this.game;\r\n    this.http.get(url).subscribe((data : {}) => {\r\n      if(data[\"status\"] == 0) {\r\n        this.characterName = data[\"name\"];\r\n        this.colorID = data[\"colorID\"];\r\n        this.hatID = data[\"hatID\"];\r\n      }\r\n    })\r\n  }\r\n\r\n  startRound() : void {\r\n    this.startingNewRound = true;\r\n    const url : string = \"http://jaketheduck.com/games/phpapi/gamedata.php?type=setup&game=fe3hau\";\r\n    this.http.get(url).subscribe((data : {}) => {\r\n      if(data[\"status\"] == 0) {\r\n        console.log(\"New round started successfully\");\r\n      }\r\n      this.startingNewRound = false;\r\n    })\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\n\r\n@Component({\r\n  selector: 'app-fe-bean-list',\r\n  templateUrl: './fe-bean-list.component.html',\r\n  styleUrls: ['./fe-bean-list.component.css']\r\n})\r\nexport class FeBeanListComponent implements OnInit {\r\n  characters : string[];\r\n  constructor(private http : HttpClient) { }\r\n\r\n  ngOnInit(): void {\r\n    const url: string = \"http://jaketheduck.com/games/phpapi/gamedata.php?type=characters\";\r\n    this.http.get(url).subscribe((data: {}) => {\r\n      console.log(\"Data: \" + data);\r\n      console.log(\"Status: \" + data[\"status\"]);\r\n      if (data[\"status\"] == 0) {\r\n        this.characters = data[\"chars\"];\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {TimeInterval} from \"rxjs\";\r\n\r\nexport interface LobbyItem {\r\n  name: string;\r\n  icon: string;\r\n  time: number;\r\n  isGrayed: boolean;\r\n  roleName: string;\r\n  roleIcon: string;\r\n  roleDescription: string;\r\n}\r\n\r\nexport interface LobbySection {\r\n  title: string;\r\n  items: LobbyItem[];\r\n}\r\n\r\n@Component({\r\n  selector: 'app-lobby',\r\n  templateUrl: './lobby.component.html',\r\n  styleUrls: ['./lobby.component.css']\r\n})\r\nexport class LobbyComponent implements OnInit {\r\n  @Input() sections: LobbySection[];\r\n  @Input() active: string;\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n}\r\n","<div class=\"beanPreview\">\r\n<div *ngFor=\"let character of this.characters\" class = \"beanPreviewElement\">\r\n  <h2>{{character}}</h2>\r\n  <app-fe-bean-preview character=\"{{character}}\"></app-fe-bean-preview>\r\n</div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {getLoginURL} from \"../app.component\";\r\n\r\nexport interface Player {\r\n  name : string;\r\n  time : number;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-game',\r\n  templateUrl: './game.component.html',\r\n  styleUrls: ['./game.component.css']\r\n})\r\nexport class GameComponent implements OnInit {\r\n  username : string;\r\n  game : string;\r\n  players: Player[];\r\n\r\n\r\n  constructor(private http: HttpClient, private activatedRoute : ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.username = this.activatedRoute.snapshot.paramMap.get(\"username\");\r\n    this.game = this.activatedRoute.snapshot.paramMap.get(\"game\");\r\n    /*this.refreshPlayers();\r\n    setInterval(() => {\r\n      this.refreshPlayers();\r\n    }, 1000)*/\r\n  }\r\n\r\n  refreshPlayers() : void {\r\n\r\n    const url : string = getLoginURL() + \"&type=update&user=\" + this.username + \"&game=\" + this.game;\r\n\r\n    console.log(\"UPDATING FROM \" + url);\r\n    this.http.get(url).subscribe((data : {}) => {\r\n      console.log(data);\r\n      if(data[\"status\"] == 0) {\r\n        this.players = data[\"players\"].map(pdata => {\r\n          var p : Player = {name: pdata[\"name\"], time: pdata[\"time\"]};\r\n          return p;\r\n        })\r\n      }\r\n    })\r\n  }\r\n}\r\n","<span (mouseover)=\"this.shouldShow = true;\"\r\n      (mouseout)=\"this.shouldShow = false;\"\r\n      (mouseleave)=\"this.shouldShow = false;\">\r\n  <img class=\"selectRoleIcon\" [src]=\"this.icon\" #iconRef>\r\n  <div *ngIf=\"!!this.iconRef\" class=\"fancyTooltipHolder\">\r\n    <div *ngIf=\"this.shouldShow\" class=\"fancyTooltip\" [class.alignOnRight]=\"isOnRight()\">\r\n      <h2>\r\n        <img class=\"selectRoleIcon\" [src]=\"this.icon\">{{this.name.charAt(0).toUpperCase() + this.name.slice(1)}}\r\n      </h2>\r\n      {{this.description}}\r\n    </div>\r\n  </div>\r\n</span>\r\n","import {Component, Input, OnChanges, OnInit, SimpleChange, SimpleChanges} from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {MatDivider} from \"@angular/material/divider\";\r\n\r\n@Component({\r\n  selector: 'app-bean-preview',\r\n  templateUrl: './bean-preview.component.html',\r\n  styleUrls: ['./bean-preview.component.css']\r\n})\r\nexport class BeanPreviewComponent implements OnInit, OnChanges {\r\n  @Input() colorID : string;\r\n  @Input() hatID : string;\r\n  @Input() scale: number;\r\n  width : number;\r\n  colorSrc: string = \"\";\r\n  hatSrc: string = \"\";\r\n  hatdx: number;\r\n  hatdy: number;\r\n  showPrimary: boolean = true;\r\n\r\n  constructor(private http: HttpClient, private activatedRoute: ActivatedRoute) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    //var colorID = this.activatedRoute.snapshot.paramMap.get(\"color\");\r\n    //var hatID = this.activatedRoute.snapshot.paramMap.get(\"hat\");\r\n    this.runWithColorAndHat(this.colorID, this.hatID);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) : void {\r\n    this.runWithColorAndHat(this.colorID, this.hatID);\r\n  }\r\n\r\n  runWithColorAndHat(colorID: string, hatID: string): void {\r\n    if(colorID == null || hatID == null) {\r\n      return;\r\n    }\r\n    console.log(\"Updating color and hat\");\r\n    const url: string = \"http://jaketheduck.com/games/phpapi/gamedata.php?type=beandata&color=\" + colorID + \"&hat=\" + hatID;\r\n    this.http.get(url).subscribe((data: {}) => {\r\n      console.log(\"Data: \" + data);\r\n      console.log(\"Status: \" + data[\"status\"]);\r\n      if (data[\"status\"] == 0) {\r\n        console.log(\"Color src: \" + data[\"colorSrc\"]);\r\n        this.colorSrc = data[\"colorSrc\"];\r\n        this.hatSrc = data[\"hatSrc\"];\r\n        this.hatdx = data[\"hatdx\"];\r\n        this.hatdy = data[\"hatdy\"];\r\n        this.width = data[\"width\"];\r\n        console.log(this.hatdx);\r\n        console.log(this.hatdy);\r\n      }\r\n    })\r\n  }\r\n\r\n}\r\n","<div class=\"mafia\">\r\n  <div class=\"mafia-topbar\">\r\n    <div class=\"role-topbar-item\" *ngFor=\"let item of this.activeRoles\">\r\n      <app-icon-with-tooltip\r\n        *ngIf=\"!!item.role\"\r\n        [name]=\"item.role.name\"\r\n        [icon]=\"item.role.icon\"\r\n        [description]=\"item.role.description\">\r\n      </app-icon-with-tooltip>\r\n      {{item.amount}}\r\n    </div>\r\n  </div>\r\n  <div class=\"mafia-main\">\r\n    <app-lobby [sections]=\"this.lobbySections\" [active]=\"this.getChatName()\"></app-lobby>\r\n    <app-chat [phase]=\"this.phase\"\r\n              [username]=\"this.username\"\r\n              [userID]=\"this.userID\"\r\n              [characterName]=\"this.getChatName()\"\r\n              [characterAvatar]=\"this.getChatAvatar()\"\r\n              [isDead]=\"!this.isAlive && this.started\"\r\n              [canSend]=\"!this.isAlive || !this.started || this.isDay || (!this.isDay && this.myRole === 2)\">\r\n    </app-chat>\r\n    <div class=\"mafia-sidebar\">\r\n      <div *ngIf=\"!this.started && isLeader\" class=\"panel-item\">\r\n        <div>\r\n          <button class=\"roleButton\" (click)=\"this.addRole(role)\" *ngFor=\"let role of this.roles\">\r\n            <app-icon-with-tooltip [name]=\"role.name\"\r\n                                   [icon]=\"role.icon\"\r\n                                   [description]=\"role.description\">\r\n            </app-icon-with-tooltip>\r\n          </button>\r\n        </div>\r\n        <div>\r\n          <div class=\"selectedRoleData\" *ngFor=\"let roleData of this.roleCounts\"\r\n               (click)=\"this.removeRole(roleData.role)\">\r\n            <app-icon-with-tooltip [name]=\"roleData.role.name\"\r\n                                   [icon]=\"roleData.role.icon\"\r\n                                   [description]=\"roleData.role.description\">\r\n            </app-icon-with-tooltip>\r\n            {{roleData.count}}\r\n          </div>\r\n        </div>\r\n        <mat-form-field appearance=\"fill\" class=\"selection\">\r\n          <mat-label>Character Set</mat-label>\r\n          <mat-select [(value)]=\"this.characterGroupChoice\">\r\n            <mat-option\r\n              *ngFor=\"let charGroup of this.characterGroups\"\r\n              [value]=\"charGroup.id\">\r\n              {{charGroup.name}}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n        <button mat-button\r\n                [class.startGameButton]=\"this.canStartGame()\"\r\n                [class.disabledStartGameButton]=\"!this.canStartGame()\"\r\n                [disabled]=\"!this.canStartGame()\"\r\n                (click)=\"this.startGame()\">Start Game\r\n        </button>\r\n      </div>\r\n      <h2 *ngIf=\"this.started\">{{this.isDay ? 'Day' : 'Night'}} {{this.dayCount}}</h2>\r\n      <div *ngIf=\"this.started && !this.isDay\" class=\"willArea\">\r\n        <label>Write a Will</label>\r\n        <mat-form-field class=\"willFormField\">\r\n          <mat-label>Write some words for when you die</mat-label>\r\n          <textarea (keyup)=\"this.willSubject.next(will.value)\" matInput placeholder=\"I cry for I die\" #will></textarea>\r\n        </mat-form-field>\r\n      </div>\r\n      <div *ngIf=\"this.started && this.isAlive\" [formGroup]=\"this.votingFormGroup\">\r\n        <div class=\"panel-item mat-elevation-z8\"\r\n             *ngFor=\"let container of this.voteContainers; trackBy: voteContainerTrackBy\">\r\n          <h2>{{container.title}}</h2>\r\n          <div>\r\n            <table>\r\n              <tr *ngFor=\"let vote of container.list\">\r\n                <td>\r\n                  {{vote.name}}:\r\n                </td>\r\n                <td>\r\n                  {{vote.vote}}\r\n                </td>\r\n              </tr>\r\n            </table>\r\n          </div>\r\n          <mat-form-field appearance=\"fill\" class=\"selection\"\r\n                          *ngFor=\"let field of container.fields; trackBy: voteFieldTrackBy\">\r\n              <mat-label *ngIf=\"field.type === 'option'\">Choose who to vote for</mat-label>\r\n              <mat-select [formControlName]=\"this.getFormControlName(field)\" *ngIf=\"field.type === 'option'\">\r\n                <mat-option\r\n                  [value]=\"'No One'\"\r\n                  (click)=\"this.sendDayVote('No One', field.barrierID)\">\r\n                  No One\r\n                </mat-option>\r\n                <mat-option\r\n                  *ngFor=\"let char of this.aliveCharacterNames\"\r\n                  [value]=\"char\"\r\n                  (click)=\"this.sendDayVote(char, field.barrierID)\">\r\n                  {{char}}\r\n                </mat-option>\r\n              </mat-select>\r\n            <mat-label *ngIf=\"field.type === 'text'\">Type a 4+ letter word to curse</mat-label>\r\n              <input matInput type=\"text\" (keyup)=\"this.sendVoteTextEvent(field)\" [formControlName]=\"this.getFormControlName(field)\" *ngIf=\"field.type === 'text'\">\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","<div class=\"dialogue\" *ngFor=\"let i of [0, 1, 2, 3]\">\r\n  {{this.targetText.slice(this.breaks[i], this.breaks[i + 1])}}\r\n</div>\r\n<div class=\"tinyHideBox\">\r\n  <div #widthChecker class=\"widthChecker\">\r\n    {{this.targetText.slice(this.breaks[this.currLineIndex], this.breaks[this.currLineIndex + 1])}}\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, retry } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport {MatIcon} from \"@angular/material/icon\";\r\nimport {MatFormField} from \"@angular/material/form-field\";\r\nimport {MatInput} from \"@angular/material/input\";\r\nimport {MatSelect} from \"@angular/material/select\";\r\nimport {MatOption} from \"@angular/material/core\";\r\nimport {FormControl} from \"@angular/forms\";\r\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\r\nimport {Router} from \"@angular/router\";\r\nimport {getLoginURL} from \"../app.component\";\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\n@Injectable()\r\nexport class LoginComponent implements OnInit {\r\n  loginForm : FormGroup;\r\n  selected = 'fe3hau';\r\n  constructor(private http: HttpClient, private formBuilder: FormBuilder, private router: Router) {\r\n    this.loginForm = this.formBuilder.group({\r\n      name: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(20), Validators.pattern(\"^[a-zA-Z0-9]*$\")]],\r\n      game: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  join(user: string, game: string) : void {\r\n    user = user.toLowerCase();\r\n    const url : string = getLoginURL() + \"/\" + game + \"/user/\" + user + \"/create\";\r\n    this.http.get(url).subscribe((data : {}) => {\r\n      console.log(\"Data: \" + data);\r\n      console.log(\"Status: \" + data[\"status\"]);\r\n      if(data[\"status\"] == 0) {\r\n        console.log(\"logging in\");\r\n        this.router.navigate(['./game', game, user]);\r\n      }\r\n    })\r\n    console.log(user + \" has logged into \" + game);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"vcenter\">\r\n  <div class=\"vholder\">\r\n  <router-outlet></router-outlet>\r\n  </div>\r\n</div>\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}